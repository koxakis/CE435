

================================================================
== Vivado HLS Report for 'adders'
================================================================
* Date:           Mon May 15 18:09:53 2017

* Version:        2016.4 (Build 1756540 on Mon Jan 23 19:31:01 MST 2017)
* Project:        adders_prj
* Solution:       solution1
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   1.00|      0.53|        0.12|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   15|   15|   16|   16|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 16
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
* FSM state operations: 

 <State 1>: 0.53ns
ST_1: in3_read (9)  [1/1] 0.00ns
:5  %in3_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %in3) nounwind

ST_1: in1_read (11)  [1/1] 0.00ns
:7  %in1_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %in1) nounwind

ST_1: tmp1 (16)  [8/8] 0.53ns  loc: adders.c:63
:12  %tmp1 = add i32 %in1_read, %in3_read


 <State 2>: 0.53ns
ST_2: tmp1 (16)  [7/8] 0.53ns  loc: adders.c:63
:12  %tmp1 = add i32 %in1_read, %in3_read


 <State 3>: 0.53ns
ST_3: tmp1 (16)  [6/8] 0.53ns  loc: adders.c:63
:12  %tmp1 = add i32 %in1_read, %in3_read


 <State 4>: 0.53ns
ST_4: tmp1 (16)  [5/8] 0.53ns  loc: adders.c:63
:12  %tmp1 = add i32 %in1_read, %in3_read


 <State 5>: 0.53ns
ST_5: tmp1 (16)  [4/8] 0.53ns  loc: adders.c:63
:12  %tmp1 = add i32 %in1_read, %in3_read


 <State 6>: 0.53ns
ST_6: tmp1 (16)  [3/8] 0.53ns  loc: adders.c:63
:12  %tmp1 = add i32 %in1_read, %in3_read


 <State 7>: 0.53ns
ST_7: tmp1 (16)  [2/8] 0.53ns  loc: adders.c:63
:12  %tmp1 = add i32 %in1_read, %in3_read


 <State 8>: 0.53ns
ST_8: tmp1 (16)  [1/8] 0.53ns  loc: adders.c:63
:12  %tmp1 = add i32 %in1_read, %in3_read


 <State 9>: 0.53ns
ST_9: in2_read (10)  [1/1] 0.00ns
:6  %in2_read = call i32 @_ssdm_op_Read.ap_none.i32(i32 %in2) nounwind

ST_9: sum (17)  [8/8] 0.53ns  loc: adders.c:63
:13  %sum = add i32 %tmp1, %in2_read


 <State 10>: 0.53ns
ST_10: sum (17)  [7/8] 0.53ns  loc: adders.c:63
:13  %sum = add i32 %tmp1, %in2_read


 <State 11>: 0.53ns
ST_11: sum (17)  [6/8] 0.53ns  loc: adders.c:63
:13  %sum = add i32 %tmp1, %in2_read


 <State 12>: 0.53ns
ST_12: sum (17)  [5/8] 0.53ns  loc: adders.c:63
:13  %sum = add i32 %tmp1, %in2_read


 <State 13>: 0.53ns
ST_13: sum (17)  [4/8] 0.53ns  loc: adders.c:63
:13  %sum = add i32 %tmp1, %in2_read


 <State 14>: 0.53ns
ST_14: sum (17)  [3/8] 0.53ns  loc: adders.c:63
:13  %sum = add i32 %tmp1, %in2_read


 <State 15>: 0.53ns
ST_15: sum (17)  [2/8] 0.53ns  loc: adders.c:63
:13  %sum = add i32 %tmp1, %in2_read


 <State 16>: 0.53ns
ST_16: StgValue_35 (4)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i32 %in1) nounwind, !map !7

ST_16: StgValue_36 (5)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i32 %in2) nounwind, !map !13

ST_16: StgValue_37 (6)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i32 %in3) nounwind, !map !17

ST_16: StgValue_38 (7)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i32 0) nounwind, !map !21

ST_16: StgValue_39 (8)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecTopModule([7 x i8]* @adders_str) nounwind

ST_16: StgValue_40 (12)  [1/1] 0.00ns  loc: adders.c:49
:8  call void (...)* @_ssdm_op_SpecInterface(i32 0, [11 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_16: StgValue_41 (13)  [1/1] 0.00ns  loc: adders.c:56
:9  call void (...)* @_ssdm_op_SpecInterface(i32 %in3, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_16: StgValue_42 (14)  [1/1] 0.00ns  loc: adders.c:57
:10  call void (...)* @_ssdm_op_SpecInterface(i32 %in2, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_16: StgValue_43 (15)  [1/1] 0.00ns  loc: adders.c:58
:11  call void (...)* @_ssdm_op_SpecInterface(i32 %in1, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_16: sum (17)  [1/8] 0.53ns  loc: adders.c:63
:13  %sum = add i32 %tmp1, %in2_read

ST_16: StgValue_45 (18)  [1/1] 0.00ns  loc: adders.c:65
:14  ret i32 %sum



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 1ns, clock uncertainty: 0.125ns.

 <State 1>: 0.53ns
The critical path consists of the following:
	wire read on port 'in3' [9]  (0 ns)
	'add' operation ('tmp1', adders.c:63) [16]  (0.53 ns)

 <State 2>: 0.53ns
The critical path consists of the following:
	'add' operation ('tmp1', adders.c:63) [16]  (0.53 ns)

 <State 3>: 0.53ns
The critical path consists of the following:
	'add' operation ('tmp1', adders.c:63) [16]  (0.53 ns)

 <State 4>: 0.53ns
The critical path consists of the following:
	'add' operation ('tmp1', adders.c:63) [16]  (0.53 ns)

 <State 5>: 0.53ns
The critical path consists of the following:
	'add' operation ('tmp1', adders.c:63) [16]  (0.53 ns)

 <State 6>: 0.53ns
The critical path consists of the following:
	'add' operation ('tmp1', adders.c:63) [16]  (0.53 ns)

 <State 7>: 0.53ns
The critical path consists of the following:
	'add' operation ('tmp1', adders.c:63) [16]  (0.53 ns)

 <State 8>: 0.53ns
The critical path consists of the following:
	'add' operation ('tmp1', adders.c:63) [16]  (0.53 ns)

 <State 9>: 0.53ns
The critical path consists of the following:
	wire read on port 'in2' [10]  (0 ns)
	'add' operation ('sum', adders.c:63) [17]  (0.53 ns)

 <State 10>: 0.53ns
The critical path consists of the following:
	'add' operation ('sum', adders.c:63) [17]  (0.53 ns)

 <State 11>: 0.53ns
The critical path consists of the following:
	'add' operation ('sum', adders.c:63) [17]  (0.53 ns)

 <State 12>: 0.53ns
The critical path consists of the following:
	'add' operation ('sum', adders.c:63) [17]  (0.53 ns)

 <State 13>: 0.53ns
The critical path consists of the following:
	'add' operation ('sum', adders.c:63) [17]  (0.53 ns)

 <State 14>: 0.53ns
The critical path consists of the following:
	'add' operation ('sum', adders.c:63) [17]  (0.53 ns)

 <State 15>: 0.53ns
The critical path consists of the following:
	'add' operation ('sum', adders.c:63) [17]  (0.53 ns)

 <State 16>: 0.53ns
The critical path consists of the following:
	'add' operation ('sum', adders.c:63) [17]  (0.53 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
