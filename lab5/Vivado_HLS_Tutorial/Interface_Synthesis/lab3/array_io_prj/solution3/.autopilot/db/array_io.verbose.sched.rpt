

================================================================
== Vivado HLS Report for 'array_io'
================================================================
* Date:           Mon May 15 21:09:32 2017

* Version:        2016.4 (Build 1756540 on Mon Jan 23 19:31:01 MST 2017)
* Project:        array_io_prj
* Solution:       solution3
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|      2.96|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   11|   11|   12|   12|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 12
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
* FSM state operations: 

 <State 1>: 2.39ns
ST_1: d_i_0_addr (25)  [1/1] 0.00ns
:10  %d_i_0_addr = getelementptr [16 x i16]* %d_i_0, i64 0, i64 0

ST_1: d_i_0_load (26)  [2/2] 2.39ns  loc: array_io.c:66
:11  %d_i_0_load = load i16* %d_i_0_addr, align 2

ST_1: d_i_1_addr (120)  [1/1] 0.00ns
:105  %d_i_1_addr = getelementptr [16 x i16]* %d_i_1, i64 0, i64 0

ST_1: d_i_1_load (121)  [2/2] 2.39ns  loc: array_io.c:66
:106  %d_i_1_load = load i16* %d_i_1_addr, align 2

ST_1: d_i_1_addr_8 (160)  [1/1] 0.00ns
:145  %d_i_1_addr_8 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 8

ST_1: d_i_1_load_8 (161)  [2/2] 2.39ns  loc: array_io.c:66
:146  %d_i_1_load_8 = load i16* %d_i_1_addr_8, align 2


 <State 2>: 2.39ns
ST_2: d_i_0_load (26)  [1/2] 2.39ns  loc: array_io.c:66
:11  %d_i_0_load = load i16* %d_i_0_addr, align 2

ST_2: d_i_0_addr_1 (32)  [1/1] 0.00ns
:17  %d_i_0_addr_1 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 1

ST_2: d_i_0_load_1 (33)  [2/2] 2.39ns  loc: array_io.c:66
:18  %d_i_0_load_1 = load i16* %d_i_0_addr_1, align 2

ST_2: d_i_0_addr_8 (80)  [1/1] 0.00ns
:65  %d_i_0_addr_8 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 8

ST_2: d_i_0_load_8 (81)  [2/2] 2.39ns  loc: array_io.c:66
:66  %d_i_0_load_8 = load i16* %d_i_0_addr_8, align 2

ST_2: d_i_1_load (121)  [1/2] 2.39ns  loc: array_io.c:66
:106  %d_i_1_load = load i16* %d_i_1_addr, align 2

ST_2: d_i_1_addr_1 (125)  [1/1] 0.00ns
:110  %d_i_1_addr_1 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 1

ST_2: d_i_1_load_1 (126)  [2/2] 2.39ns  loc: array_io.c:66
:111  %d_i_1_load_1 = load i16* %d_i_1_addr_1, align 2

ST_2: d_i_1_load_8 (161)  [1/2] 2.39ns  loc: array_io.c:66
:146  %d_i_1_load_8 = load i16* %d_i_1_addr_8, align 2

ST_2: d_i_1_addr_9 (172)  [1/1] 0.00ns
:157  %d_i_1_addr_9 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 9

ST_2: d_i_1_load_9 (173)  [2/2] 2.39ns  loc: array_io.c:66
:158  %d_i_1_load_9 = load i16* %d_i_1_addr_9, align 2


 <State 3>: 2.39ns
ST_3: acc_0_load (24)  [1/1] 0.00ns  loc: array_io.c:66
:9  %acc_0_load = load i32* @acc_0, align 4

ST_3: tmp (28)  [1/1] 0.00ns  loc: array_io.c:66
:13  %tmp = trunc i32 %acc_0_load to i16

ST_3: tmp_s (29)  [1/1] 1.46ns  loc: array_io.c:67
:14  %tmp_s = add i16 %d_i_0_load, %tmp

ST_3: d_i_0_load_1 (33)  [1/2] 2.39ns  loc: array_io.c:66
:18  %d_i_0_load_1 = load i16* %d_i_0_addr_1, align 2

ST_3: d_i_0_addr_2 (39)  [1/1] 0.00ns
:24  %d_i_0_addr_2 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 2

ST_3: d_i_0_load_2 (40)  [2/2] 2.39ns  loc: array_io.c:66
:25  %d_i_0_load_2 = load i16* %d_i_0_addr_2, align 2

ST_3: d_i_0_load_8 (81)  [1/2] 2.39ns  loc: array_io.c:66
:66  %d_i_0_load_8 = load i16* %d_i_0_addr_8, align 2

ST_3: d_i_0_addr_9 (85)  [1/1] 0.00ns
:70  %d_i_0_addr_9 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 9

ST_3: d_i_0_load_9 (86)  [2/2] 2.39ns  loc: array_io.c:66
:71  %d_i_0_load_9 = load i16* %d_i_0_addr_9, align 2

ST_3: tmp_2_15_cast (122)  [1/1] 0.00ns  loc: array_io.c:67
:107  %tmp_2_15_cast = sext i16 %d_i_1_load to i17

ST_3: d_i_1_load_1 (126)  [1/2] 2.39ns  loc: array_io.c:66
:111  %d_i_1_load_1 = load i16* %d_i_1_addr_1, align 2

ST_3: d_i_1_addr_2 (130)  [1/1] 0.00ns
:115  %d_i_1_addr_2 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 2

ST_3: d_i_1_load_2 (131)  [2/2] 2.39ns  loc: array_io.c:66
:116  %d_i_1_load_2 = load i16* %d_i_1_addr_2, align 2

ST_3: tmp_2_23_cast (162)  [1/1] 0.00ns  loc: array_io.c:66
:147  %tmp_2_23_cast = sext i16 %d_i_1_load_8 to i17

ST_3: tmp3 (164)  [1/1] 1.46ns  loc: array_io.c:66
:149  %tmp3 = add i17 %tmp_2_15_cast, %tmp_2_23_cast

ST_3: d_i_1_load_9 (173)  [1/2] 2.39ns  loc: array_io.c:66
:158  %d_i_1_load_9 = load i16* %d_i_1_addr_9, align 2

ST_3: d_i_1_addr_10 (184)  [1/1] 0.00ns
:169  %d_i_1_addr_10 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 10

ST_3: d_i_1_load_10 (185)  [2/2] 2.39ns  loc: array_io.c:66
:170  %d_i_1_load_10 = load i16* %d_i_1_addr_10, align 2


 <State 4>: 2.96ns
ST_4: tmp_2 (27)  [1/1] 0.00ns  loc: array_io.c:66
:12  %tmp_2 = sext i16 %d_i_0_load to i32

ST_4: acc_1_load (31)  [1/1] 0.00ns  loc: array_io.c:66
:16  %acc_1_load = load i32* @acc_1, align 4

ST_4: tmp_1 (35)  [1/1] 0.00ns  loc: array_io.c:66
:20  %tmp_1 = trunc i32 %acc_1_load to i16

ST_4: tmp_4_1 (36)  [1/1] 1.46ns  loc: array_io.c:67
:21  %tmp_4_1 = add i16 %d_i_0_load_1, %tmp_1

ST_4: d_i_0_load_2 (40)  [1/2] 2.39ns  loc: array_io.c:66
:25  %d_i_0_load_2 = load i16* %d_i_0_addr_2, align 2

ST_4: d_i_0_addr_3 (46)  [1/1] 0.00ns
:31  %d_i_0_addr_3 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 3

ST_4: d_i_0_load_3 (47)  [2/2] 2.39ns  loc: array_io.c:66
:32  %d_i_0_load_3 = load i16* %d_i_0_addr_3, align 2

ST_4: tmp_2_8_cast (82)  [1/1] 0.00ns  loc: array_io.c:67
:67  %tmp_2_8_cast = sext i16 %d_i_0_load_8 to i18

ST_4: tmp_4_8 (83)  [1/1] 1.46ns  loc: array_io.c:67
:68  %tmp_4_8 = add i16 %d_i_0_load_8, %tmp_s

ST_4: d_i_0_load_9 (86)  [1/2] 2.39ns  loc: array_io.c:66
:71  %d_i_0_load_9 = load i16* %d_i_0_addr_9, align 2

ST_4: d_i_0_addr_10 (90)  [1/1] 0.00ns
:75  %d_i_0_addr_10 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 10

ST_4: d_i_0_load_10 (91)  [2/2] 2.39ns  loc: array_io.c:66
:76  %d_i_0_load_10 = load i16* %d_i_0_addr_10, align 2

ST_4: tmp_4_15 (123)  [1/1] 1.46ns  loc: array_io.c:67
:108  %tmp_4_15 = add i16 %d_i_1_load, %tmp_4_8

ST_4: tmp_2_16_cast (127)  [1/1] 0.00ns  loc: array_io.c:67
:112  %tmp_2_16_cast = sext i16 %d_i_1_load_1 to i17

ST_4: d_i_1_load_2 (131)  [1/2] 2.39ns  loc: array_io.c:66
:116  %d_i_1_load_2 = load i16* %d_i_1_addr_2, align 2

ST_4: d_i_1_addr_3 (135)  [1/1] 0.00ns
:120  %d_i_1_addr_3 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 3

ST_4: d_i_1_load_3 (136)  [2/2] 2.39ns  loc: array_io.c:66
:121  %d_i_1_load_3 = load i16* %d_i_1_addr_3, align 2

ST_4: tmp1 (163)  [1/1] 1.44ns  loc: array_io.c:66
:148  %tmp1 = add i32 %acc_0_load, %tmp_2

ST_4: tmp3_cast (165)  [1/1] 0.00ns  loc: array_io.c:66
:150  %tmp3_cast = sext i17 %tmp3 to i18

ST_4: tmp2 (166)  [1/1] 1.52ns  loc: array_io.c:66
:151  %tmp2 = add i18 %tmp3_cast, %tmp_2_8_cast

ST_4: tmp2_cast (167)  [1/1] 0.00ns  loc: array_io.c:66
:152  %tmp2_cast = sext i18 %tmp2 to i32

ST_4: tmp_3_s (168)  [1/1] 1.44ns  loc: array_io.c:66
:153  %tmp_3_s = add nsw i32 %tmp2_cast, %tmp1

ST_4: StgValue_70 (169)  [1/1] 0.00ns  loc: array_io.c:66
:154  store i32 %tmp_3_s, i32* @acc_0, align 16

ST_4: tmp_2_24_cast (174)  [1/1] 0.00ns  loc: array_io.c:66
:159  %tmp_2_24_cast = sext i16 %d_i_1_load_9 to i17

ST_4: tmp6 (176)  [1/1] 1.46ns  loc: array_io.c:66
:161  %tmp6 = add i17 %tmp_2_16_cast, %tmp_2_24_cast

ST_4: d_i_1_load_10 (185)  [1/2] 2.39ns  loc: array_io.c:66
:170  %d_i_1_load_10 = load i16* %d_i_1_addr_10, align 2

ST_4: d_i_1_addr_11 (196)  [1/1] 0.00ns
:181  %d_i_1_addr_11 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 11

ST_4: d_i_1_load_11 (197)  [2/2] 2.39ns  loc: array_io.c:66
:182  %d_i_1_load_11 = load i16* %d_i_1_addr_11, align 2


 <State 5>: 2.96ns
ST_5: StgValue_76 (30)  [1/1] 1.00ns  loc: array_io.c:67
:15  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_0, i16 %tmp_s)

ST_5: tmp_2_1 (34)  [1/1] 0.00ns  loc: array_io.c:66
:19  %tmp_2_1 = sext i16 %d_i_0_load_1 to i32

ST_5: acc_2_load (38)  [1/1] 0.00ns  loc: array_io.c:66
:23  %acc_2_load = load i32* @acc_2, align 4

ST_5: tmp_3 (42)  [1/1] 0.00ns  loc: array_io.c:66
:27  %tmp_3 = trunc i32 %acc_2_load to i16

ST_5: tmp_4_2 (43)  [1/1] 1.46ns  loc: array_io.c:67
:28  %tmp_4_2 = add i16 %d_i_0_load_2, %tmp_3

ST_5: d_i_0_load_3 (47)  [1/2] 2.39ns  loc: array_io.c:66
:32  %d_i_0_load_3 = load i16* %d_i_0_addr_3, align 2

ST_5: d_i_0_addr_4 (53)  [1/1] 0.00ns
:38  %d_i_0_addr_4 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 4

ST_5: d_i_0_load_4 (54)  [2/2] 2.39ns  loc: array_io.c:66
:39  %d_i_0_load_4 = load i16* %d_i_0_addr_4, align 2

ST_5: StgValue_84 (84)  [1/1] 1.00ns  loc: array_io.c:67
:69  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_1, i16 %tmp_4_8)

ST_5: tmp_2_9_cast (87)  [1/1] 0.00ns  loc: array_io.c:67
:72  %tmp_2_9_cast = sext i16 %d_i_0_load_9 to i18

ST_5: tmp_4_9 (88)  [1/1] 1.46ns  loc: array_io.c:67
:73  %tmp_4_9 = add i16 %d_i_0_load_9, %tmp_4_1

ST_5: d_i_0_load_10 (91)  [1/2] 2.39ns  loc: array_io.c:66
:76  %d_i_0_load_10 = load i16* %d_i_0_addr_10, align 2

ST_5: d_i_0_addr_11 (95)  [1/1] 0.00ns
:80  %d_i_0_addr_11 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 11

ST_5: d_i_0_load_11 (96)  [2/2] 2.39ns  loc: array_io.c:66
:81  %d_i_0_load_11 = load i16* %d_i_0_addr_11, align 2

ST_5: StgValue_90 (124)  [1/1] 1.00ns  loc: array_io.c:67
:109  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_2, i16 %tmp_4_15)

ST_5: tmp_4_16 (128)  [1/1] 1.46ns  loc: array_io.c:67
:113  %tmp_4_16 = add i16 %d_i_1_load_1, %tmp_4_9

ST_5: tmp_2_17_cast (132)  [1/1] 0.00ns  loc: array_io.c:67
:117  %tmp_2_17_cast = sext i16 %d_i_1_load_2 to i17

ST_5: d_i_1_load_3 (136)  [1/2] 2.39ns  loc: array_io.c:66
:121  %d_i_1_load_3 = load i16* %d_i_1_addr_3, align 2

ST_5: d_i_1_addr_4 (140)  [1/1] 0.00ns
:125  %d_i_1_addr_4 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 4

ST_5: d_i_1_load_4 (141)  [2/2] 2.39ns  loc: array_io.c:66
:126  %d_i_1_load_4 = load i16* %d_i_1_addr_4, align 2

ST_5: tmp_4_23 (170)  [1/1] 1.46ns  loc: array_io.c:67
:155  %tmp_4_23 = add i16 %d_i_1_load_8, %tmp_4_15

ST_5: StgValue_97 (171)  [1/1] 1.00ns  loc: array_io.c:67
:156  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_3, i16 %tmp_4_23)

ST_5: tmp4 (175)  [1/1] 1.44ns  loc: array_io.c:66
:160  %tmp4 = add i32 %acc_1_load, %tmp_2_1

ST_5: tmp6_cast (177)  [1/1] 0.00ns  loc: array_io.c:66
:162  %tmp6_cast = sext i17 %tmp6 to i18

ST_5: tmp5 (178)  [1/1] 1.52ns  loc: array_io.c:66
:163  %tmp5 = add i18 %tmp6_cast, %tmp_2_9_cast

ST_5: tmp5_cast (179)  [1/1] 0.00ns  loc: array_io.c:66
:164  %tmp5_cast = sext i18 %tmp5 to i32

ST_5: tmp_3_1 (180)  [1/1] 1.44ns  loc: array_io.c:66
:165  %tmp_3_1 = add nsw i32 %tmp5_cast, %tmp4

ST_5: StgValue_103 (181)  [1/1] 0.00ns  loc: array_io.c:66
:166  store i32 %tmp_3_1, i32* @acc_1, align 4

ST_5: tmp_2_25_cast (186)  [1/1] 0.00ns  loc: array_io.c:66
:171  %tmp_2_25_cast = sext i16 %d_i_1_load_10 to i17

ST_5: tmp9 (188)  [1/1] 1.46ns  loc: array_io.c:66
:173  %tmp9 = add i17 %tmp_2_17_cast, %tmp_2_25_cast

ST_5: d_i_1_load_11 (197)  [1/2] 2.39ns  loc: array_io.c:66
:182  %d_i_1_load_11 = load i16* %d_i_1_addr_11, align 2

ST_5: d_i_1_addr_12 (208)  [1/1] 0.00ns
:193  %d_i_1_addr_12 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 12

ST_5: d_i_1_load_12 (209)  [2/2] 2.39ns  loc: array_io.c:66
:194  %d_i_1_load_12 = load i16* %d_i_1_addr_12, align 2


 <State 6>: 2.96ns
ST_6: StgValue_109 (37)  [1/1] 1.00ns  loc: array_io.c:67
:22  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_0, i16 %tmp_4_1)

ST_6: tmp_2_2 (41)  [1/1] 0.00ns  loc: array_io.c:66
:26  %tmp_2_2 = sext i16 %d_i_0_load_2 to i32

ST_6: acc_3_load (45)  [1/1] 0.00ns  loc: array_io.c:66
:30  %acc_3_load = load i32* @acc_3, align 4

ST_6: tmp_4 (49)  [1/1] 0.00ns  loc: array_io.c:66
:34  %tmp_4 = trunc i32 %acc_3_load to i16

ST_6: tmp_4_3 (50)  [1/1] 1.46ns  loc: array_io.c:67
:35  %tmp_4_3 = add i16 %d_i_0_load_3, %tmp_4

ST_6: d_i_0_load_4 (54)  [1/2] 2.39ns  loc: array_io.c:66
:39  %d_i_0_load_4 = load i16* %d_i_0_addr_4, align 2

ST_6: d_i_0_addr_5 (60)  [1/1] 0.00ns
:45  %d_i_0_addr_5 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 5

ST_6: d_i_0_load_5 (61)  [2/2] 2.39ns  loc: array_io.c:66
:46  %d_i_0_load_5 = load i16* %d_i_0_addr_5, align 2

ST_6: StgValue_117 (89)  [1/1] 1.00ns  loc: array_io.c:67
:74  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_1, i16 %tmp_4_9)

ST_6: tmp_2_cast (92)  [1/1] 0.00ns  loc: array_io.c:67
:77  %tmp_2_cast = sext i16 %d_i_0_load_10 to i18

ST_6: tmp_4_s (93)  [1/1] 1.46ns  loc: array_io.c:67
:78  %tmp_4_s = add i16 %d_i_0_load_10, %tmp_4_2

ST_6: d_i_0_load_11 (96)  [1/2] 2.39ns  loc: array_io.c:66
:81  %d_i_0_load_11 = load i16* %d_i_0_addr_11, align 2

ST_6: d_i_0_addr_12 (100)  [1/1] 0.00ns
:85  %d_i_0_addr_12 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 12

ST_6: d_i_0_load_12 (101)  [2/2] 2.39ns  loc: array_io.c:66
:86  %d_i_0_load_12 = load i16* %d_i_0_addr_12, align 2

ST_6: StgValue_123 (129)  [1/1] 1.00ns  loc: array_io.c:67
:114  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_2, i16 %tmp_4_16)

ST_6: tmp_4_17 (133)  [1/1] 1.46ns  loc: array_io.c:67
:118  %tmp_4_17 = add i16 %d_i_1_load_2, %tmp_4_s

ST_6: tmp_2_18_cast (137)  [1/1] 0.00ns  loc: array_io.c:67
:122  %tmp_2_18_cast = sext i16 %d_i_1_load_3 to i17

ST_6: d_i_1_load_4 (141)  [1/2] 2.39ns  loc: array_io.c:66
:126  %d_i_1_load_4 = load i16* %d_i_1_addr_4, align 2

ST_6: d_i_1_addr_5 (145)  [1/1] 0.00ns
:130  %d_i_1_addr_5 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 5

ST_6: d_i_1_load_5 (146)  [2/2] 2.39ns  loc: array_io.c:66
:131  %d_i_1_load_5 = load i16* %d_i_1_addr_5, align 2

ST_6: tmp_4_24 (182)  [1/1] 1.46ns  loc: array_io.c:67
:167  %tmp_4_24 = add i16 %d_i_1_load_9, %tmp_4_16

ST_6: StgValue_130 (183)  [1/1] 1.00ns  loc: array_io.c:67
:168  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_3, i16 %tmp_4_24)

ST_6: tmp7 (187)  [1/1] 1.44ns  loc: array_io.c:66
:172  %tmp7 = add i32 %acc_2_load, %tmp_2_2

ST_6: tmp9_cast (189)  [1/1] 0.00ns  loc: array_io.c:66
:174  %tmp9_cast = sext i17 %tmp9 to i18

ST_6: tmp8 (190)  [1/1] 1.52ns  loc: array_io.c:66
:175  %tmp8 = add i18 %tmp9_cast, %tmp_2_cast

ST_6: tmp8_cast (191)  [1/1] 0.00ns  loc: array_io.c:66
:176  %tmp8_cast = sext i18 %tmp8 to i32

ST_6: tmp_3_2 (192)  [1/1] 1.44ns  loc: array_io.c:66
:177  %tmp_3_2 = add nsw i32 %tmp8_cast, %tmp7

ST_6: StgValue_136 (193)  [1/1] 0.00ns  loc: array_io.c:66
:178  store i32 %tmp_3_2, i32* @acc_2, align 8

ST_6: tmp_2_26_cast (198)  [1/1] 0.00ns  loc: array_io.c:66
:183  %tmp_2_26_cast = sext i16 %d_i_1_load_11 to i17

ST_6: tmp12 (200)  [1/1] 1.46ns  loc: array_io.c:66
:185  %tmp12 = add i17 %tmp_2_18_cast, %tmp_2_26_cast

ST_6: d_i_1_load_12 (209)  [1/2] 2.39ns  loc: array_io.c:66
:194  %d_i_1_load_12 = load i16* %d_i_1_addr_12, align 2

ST_6: d_i_1_addr_13 (220)  [1/1] 0.00ns
:205  %d_i_1_addr_13 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 13

ST_6: d_i_1_load_13 (221)  [2/2] 2.39ns  loc: array_io.c:66
:206  %d_i_1_load_13 = load i16* %d_i_1_addr_13, align 2


 <State 7>: 2.96ns
ST_7: StgValue_142 (44)  [1/1] 1.00ns  loc: array_io.c:67
:29  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_0, i16 %tmp_4_2)

ST_7: tmp_2_3 (48)  [1/1] 0.00ns  loc: array_io.c:66
:33  %tmp_2_3 = sext i16 %d_i_0_load_3 to i32

ST_7: acc_4_load (52)  [1/1] 0.00ns  loc: array_io.c:66
:37  %acc_4_load = load i32* @acc_4, align 4

ST_7: tmp_5 (56)  [1/1] 0.00ns  loc: array_io.c:66
:41  %tmp_5 = trunc i32 %acc_4_load to i16

ST_7: tmp_4_4 (57)  [1/1] 1.46ns  loc: array_io.c:67
:42  %tmp_4_4 = add i16 %d_i_0_load_4, %tmp_5

ST_7: d_i_0_load_5 (61)  [1/2] 2.39ns  loc: array_io.c:66
:46  %d_i_0_load_5 = load i16* %d_i_0_addr_5, align 2

ST_7: d_i_0_addr_6 (67)  [1/1] 0.00ns
:52  %d_i_0_addr_6 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 6

ST_7: d_i_0_load_6 (68)  [2/2] 2.39ns  loc: array_io.c:66
:53  %d_i_0_load_6 = load i16* %d_i_0_addr_6, align 2

ST_7: StgValue_150 (94)  [1/1] 1.00ns  loc: array_io.c:67
:79  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_1, i16 %tmp_4_s)

ST_7: tmp_2_10_cast (97)  [1/1] 0.00ns  loc: array_io.c:67
:82  %tmp_2_10_cast = sext i16 %d_i_0_load_11 to i18

ST_7: tmp_4_10 (98)  [1/1] 1.46ns  loc: array_io.c:67
:83  %tmp_4_10 = add i16 %d_i_0_load_11, %tmp_4_3

ST_7: d_i_0_load_12 (101)  [1/2] 2.39ns  loc: array_io.c:66
:86  %d_i_0_load_12 = load i16* %d_i_0_addr_12, align 2

ST_7: d_i_0_addr_13 (105)  [1/1] 0.00ns
:90  %d_i_0_addr_13 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 13

ST_7: d_i_0_load_13 (106)  [2/2] 2.39ns  loc: array_io.c:66
:91  %d_i_0_load_13 = load i16* %d_i_0_addr_13, align 2

ST_7: StgValue_156 (134)  [1/1] 1.00ns  loc: array_io.c:67
:119  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_2, i16 %tmp_4_17)

ST_7: tmp_4_18 (138)  [1/1] 1.46ns  loc: array_io.c:67
:123  %tmp_4_18 = add i16 %d_i_1_load_3, %tmp_4_10

ST_7: tmp_2_19_cast (142)  [1/1] 0.00ns  loc: array_io.c:67
:127  %tmp_2_19_cast = sext i16 %d_i_1_load_4 to i17

ST_7: d_i_1_load_5 (146)  [1/2] 2.39ns  loc: array_io.c:66
:131  %d_i_1_load_5 = load i16* %d_i_1_addr_5, align 2

ST_7: d_i_1_addr_6 (150)  [1/1] 0.00ns
:135  %d_i_1_addr_6 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 6

ST_7: d_i_1_load_6 (151)  [2/2] 2.39ns  loc: array_io.c:66
:136  %d_i_1_load_6 = load i16* %d_i_1_addr_6, align 2

ST_7: tmp_4_25 (194)  [1/1] 1.46ns  loc: array_io.c:67
:179  %tmp_4_25 = add i16 %d_i_1_load_10, %tmp_4_17

ST_7: StgValue_163 (195)  [1/1] 1.00ns  loc: array_io.c:67
:180  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_3, i16 %tmp_4_25)

ST_7: tmp10 (199)  [1/1] 1.44ns  loc: array_io.c:66
:184  %tmp10 = add i32 %acc_3_load, %tmp_2_3

ST_7: tmp12_cast (201)  [1/1] 0.00ns  loc: array_io.c:66
:186  %tmp12_cast = sext i17 %tmp12 to i18

ST_7: tmp11 (202)  [1/1] 1.52ns  loc: array_io.c:66
:187  %tmp11 = add i18 %tmp12_cast, %tmp_2_10_cast

ST_7: tmp11_cast (203)  [1/1] 0.00ns  loc: array_io.c:66
:188  %tmp11_cast = sext i18 %tmp11 to i32

ST_7: tmp_3_3 (204)  [1/1] 1.44ns  loc: array_io.c:66
:189  %tmp_3_3 = add nsw i32 %tmp11_cast, %tmp10

ST_7: StgValue_169 (205)  [1/1] 0.00ns  loc: array_io.c:66
:190  store i32 %tmp_3_3, i32* @acc_3, align 4

ST_7: tmp_2_27_cast (210)  [1/1] 0.00ns  loc: array_io.c:66
:195  %tmp_2_27_cast = sext i16 %d_i_1_load_12 to i17

ST_7: tmp15 (212)  [1/1] 1.46ns  loc: array_io.c:66
:197  %tmp15 = add i17 %tmp_2_19_cast, %tmp_2_27_cast

ST_7: d_i_1_load_13 (221)  [1/2] 2.39ns  loc: array_io.c:66
:206  %d_i_1_load_13 = load i16* %d_i_1_addr_13, align 2

ST_7: d_i_1_addr_14 (232)  [1/1] 0.00ns
:217  %d_i_1_addr_14 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 14

ST_7: d_i_1_load_14 (233)  [2/2] 2.39ns  loc: array_io.c:66
:218  %d_i_1_load_14 = load i16* %d_i_1_addr_14, align 2


 <State 8>: 2.96ns
ST_8: StgValue_175 (51)  [1/1] 1.00ns  loc: array_io.c:67
:36  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_0, i16 %tmp_4_3)

ST_8: tmp_2_4 (55)  [1/1] 0.00ns  loc: array_io.c:66
:40  %tmp_2_4 = sext i16 %d_i_0_load_4 to i32

ST_8: acc_5_load (59)  [1/1] 0.00ns  loc: array_io.c:66
:44  %acc_5_load = load i32* @acc_5, align 4

ST_8: tmp_6 (63)  [1/1] 0.00ns  loc: array_io.c:66
:48  %tmp_6 = trunc i32 %acc_5_load to i16

ST_8: tmp_4_5 (64)  [1/1] 1.46ns  loc: array_io.c:67
:49  %tmp_4_5 = add i16 %d_i_0_load_5, %tmp_6

ST_8: d_i_0_load_6 (68)  [1/2] 2.39ns  loc: array_io.c:66
:53  %d_i_0_load_6 = load i16* %d_i_0_addr_6, align 2

ST_8: d_i_0_addr_7 (74)  [1/1] 0.00ns
:59  %d_i_0_addr_7 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 7

ST_8: d_i_0_load_7 (75)  [2/2] 2.39ns  loc: array_io.c:66
:60  %d_i_0_load_7 = load i16* %d_i_0_addr_7, align 2

ST_8: StgValue_183 (99)  [1/1] 1.00ns  loc: array_io.c:67
:84  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_1, i16 %tmp_4_10)

ST_8: tmp_2_11_cast (102)  [1/1] 0.00ns  loc: array_io.c:67
:87  %tmp_2_11_cast = sext i16 %d_i_0_load_12 to i18

ST_8: tmp_4_11 (103)  [1/1] 1.46ns  loc: array_io.c:67
:88  %tmp_4_11 = add i16 %d_i_0_load_12, %tmp_4_4

ST_8: d_i_0_load_13 (106)  [1/2] 2.39ns  loc: array_io.c:66
:91  %d_i_0_load_13 = load i16* %d_i_0_addr_13, align 2

ST_8: d_i_0_addr_14 (110)  [1/1] 0.00ns
:95  %d_i_0_addr_14 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 14

ST_8: d_i_0_load_14 (111)  [2/2] 2.39ns  loc: array_io.c:66
:96  %d_i_0_load_14 = load i16* %d_i_0_addr_14, align 2

ST_8: StgValue_189 (139)  [1/1] 1.00ns  loc: array_io.c:67
:124  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_2, i16 %tmp_4_18)

ST_8: tmp_4_19 (143)  [1/1] 1.46ns  loc: array_io.c:67
:128  %tmp_4_19 = add i16 %d_i_1_load_4, %tmp_4_11

ST_8: tmp_2_20_cast (147)  [1/1] 0.00ns  loc: array_io.c:67
:132  %tmp_2_20_cast = sext i16 %d_i_1_load_5 to i17

ST_8: d_i_1_load_6 (151)  [1/2] 2.39ns  loc: array_io.c:66
:136  %d_i_1_load_6 = load i16* %d_i_1_addr_6, align 2

ST_8: d_i_1_addr_7 (155)  [1/1] 0.00ns
:140  %d_i_1_addr_7 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 7

ST_8: d_i_1_load_7 (156)  [2/2] 2.39ns  loc: array_io.c:66
:141  %d_i_1_load_7 = load i16* %d_i_1_addr_7, align 2

ST_8: tmp_4_26 (206)  [1/1] 1.46ns  loc: array_io.c:67
:191  %tmp_4_26 = add i16 %d_i_1_load_11, %tmp_4_18

ST_8: StgValue_196 (207)  [1/1] 1.00ns  loc: array_io.c:67
:192  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_3, i16 %tmp_4_26)

ST_8: tmp13 (211)  [1/1] 1.44ns  loc: array_io.c:66
:196  %tmp13 = add i32 %acc_4_load, %tmp_2_4

ST_8: tmp15_cast (213)  [1/1] 0.00ns  loc: array_io.c:66
:198  %tmp15_cast = sext i17 %tmp15 to i18

ST_8: tmp14 (214)  [1/1] 1.52ns  loc: array_io.c:66
:199  %tmp14 = add i18 %tmp15_cast, %tmp_2_11_cast

ST_8: tmp14_cast (215)  [1/1] 0.00ns  loc: array_io.c:66
:200  %tmp14_cast = sext i18 %tmp14 to i32

ST_8: tmp_3_4 (216)  [1/1] 1.44ns  loc: array_io.c:66
:201  %tmp_3_4 = add nsw i32 %tmp14_cast, %tmp13

ST_8: StgValue_202 (217)  [1/1] 0.00ns  loc: array_io.c:66
:202  store i32 %tmp_3_4, i32* @acc_4, align 16

ST_8: tmp_2_28_cast (222)  [1/1] 0.00ns  loc: array_io.c:66
:207  %tmp_2_28_cast = sext i16 %d_i_1_load_13 to i17

ST_8: tmp18 (224)  [1/1] 1.46ns  loc: array_io.c:66
:209  %tmp18 = add i17 %tmp_2_20_cast, %tmp_2_28_cast

ST_8: d_i_1_load_14 (233)  [1/2] 2.39ns  loc: array_io.c:66
:218  %d_i_1_load_14 = load i16* %d_i_1_addr_14, align 2

ST_8: d_i_1_addr_15 (244)  [1/1] 0.00ns
:229  %d_i_1_addr_15 = getelementptr [16 x i16]* %d_i_1, i64 0, i64 15

ST_8: d_i_1_load_15 (245)  [2/2] 2.39ns  loc: array_io.c:66
:230  %d_i_1_load_15 = load i16* %d_i_1_addr_15, align 2


 <State 9>: 2.96ns
ST_9: StgValue_208 (58)  [1/1] 1.00ns  loc: array_io.c:67
:43  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_0, i16 %tmp_4_4)

ST_9: tmp_2_5 (62)  [1/1] 0.00ns  loc: array_io.c:66
:47  %tmp_2_5 = sext i16 %d_i_0_load_5 to i32

ST_9: acc_6_load (66)  [1/1] 0.00ns  loc: array_io.c:66
:51  %acc_6_load = load i32* @acc_6, align 4

ST_9: tmp_7 (70)  [1/1] 0.00ns  loc: array_io.c:66
:55  %tmp_7 = trunc i32 %acc_6_load to i16

ST_9: tmp_4_6 (71)  [1/1] 1.46ns  loc: array_io.c:67
:56  %tmp_4_6 = add i16 %d_i_0_load_6, %tmp_7

ST_9: d_i_0_load_7 (75)  [1/2] 2.39ns  loc: array_io.c:66
:60  %d_i_0_load_7 = load i16* %d_i_0_addr_7, align 2

ST_9: StgValue_214 (104)  [1/1] 1.00ns  loc: array_io.c:67
:89  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_1, i16 %tmp_4_11)

ST_9: tmp_2_12_cast (107)  [1/1] 0.00ns  loc: array_io.c:67
:92  %tmp_2_12_cast = sext i16 %d_i_0_load_13 to i18

ST_9: tmp_4_12 (108)  [1/1] 1.46ns  loc: array_io.c:67
:93  %tmp_4_12 = add i16 %d_i_0_load_13, %tmp_4_5

ST_9: d_i_0_load_14 (111)  [1/2] 2.39ns  loc: array_io.c:66
:96  %d_i_0_load_14 = load i16* %d_i_0_addr_14, align 2

ST_9: d_i_0_addr_15 (115)  [1/1] 0.00ns
:100  %d_i_0_addr_15 = getelementptr [16 x i16]* %d_i_0, i64 0, i64 15

ST_9: d_i_0_load_15 (116)  [2/2] 2.39ns  loc: array_io.c:66
:101  %d_i_0_load_15 = load i16* %d_i_0_addr_15, align 2

ST_9: StgValue_220 (144)  [1/1] 1.00ns  loc: array_io.c:67
:129  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_2, i16 %tmp_4_19)

ST_9: tmp_4_20 (148)  [1/1] 1.46ns  loc: array_io.c:67
:133  %tmp_4_20 = add i16 %d_i_1_load_5, %tmp_4_12

ST_9: tmp_2_21_cast (152)  [1/1] 0.00ns  loc: array_io.c:67
:137  %tmp_2_21_cast = sext i16 %d_i_1_load_6 to i17

ST_9: d_i_1_load_7 (156)  [1/2] 2.39ns  loc: array_io.c:66
:141  %d_i_1_load_7 = load i16* %d_i_1_addr_7, align 2

ST_9: tmp_4_27 (218)  [1/1] 1.46ns  loc: array_io.c:67
:203  %tmp_4_27 = add i16 %d_i_1_load_12, %tmp_4_19

ST_9: StgValue_225 (219)  [1/1] 1.00ns  loc: array_io.c:67
:204  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_3, i16 %tmp_4_27)

ST_9: tmp16 (223)  [1/1] 1.44ns  loc: array_io.c:66
:208  %tmp16 = add i32 %acc_5_load, %tmp_2_5

ST_9: tmp18_cast (225)  [1/1] 0.00ns  loc: array_io.c:66
:210  %tmp18_cast = sext i17 %tmp18 to i18

ST_9: tmp17 (226)  [1/1] 1.52ns  loc: array_io.c:66
:211  %tmp17 = add i18 %tmp18_cast, %tmp_2_12_cast

ST_9: tmp17_cast (227)  [1/1] 0.00ns  loc: array_io.c:66
:212  %tmp17_cast = sext i18 %tmp17 to i32

ST_9: tmp_3_5 (228)  [1/1] 1.44ns  loc: array_io.c:66
:213  %tmp_3_5 = add nsw i32 %tmp17_cast, %tmp16

ST_9: StgValue_231 (229)  [1/1] 0.00ns  loc: array_io.c:66
:214  store i32 %tmp_3_5, i32* @acc_5, align 4

ST_9: tmp_2_29_cast (234)  [1/1] 0.00ns  loc: array_io.c:66
:219  %tmp_2_29_cast = sext i16 %d_i_1_load_14 to i17

ST_9: tmp21 (236)  [1/1] 1.46ns  loc: array_io.c:66
:221  %tmp21 = add i17 %tmp_2_21_cast, %tmp_2_29_cast

ST_9: d_i_1_load_15 (245)  [1/2] 2.39ns  loc: array_io.c:66
:230  %d_i_1_load_15 = load i16* %d_i_1_addr_15, align 2


 <State 10>: 2.96ns
ST_10: StgValue_235 (65)  [1/1] 1.00ns  loc: array_io.c:67
:50  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_0, i16 %tmp_4_5)

ST_10: tmp_2_6 (69)  [1/1] 0.00ns  loc: array_io.c:66
:54  %tmp_2_6 = sext i16 %d_i_0_load_6 to i32

ST_10: acc_7_load (73)  [1/1] 0.00ns  loc: array_io.c:66
:58  %acc_7_load = load i32* @acc_7, align 4

ST_10: tmp_8 (77)  [1/1] 0.00ns  loc: array_io.c:66
:62  %tmp_8 = trunc i32 %acc_7_load to i16

ST_10: tmp_4_7 (78)  [1/1] 1.46ns  loc: array_io.c:67
:63  %tmp_4_7 = add i16 %d_i_0_load_7, %tmp_8

ST_10: StgValue_240 (109)  [1/1] 1.00ns  loc: array_io.c:67
:94  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_1, i16 %tmp_4_12)

ST_10: tmp_2_13_cast (112)  [1/1] 0.00ns  loc: array_io.c:67
:97  %tmp_2_13_cast = sext i16 %d_i_0_load_14 to i18

ST_10: tmp_4_13 (113)  [1/1] 1.46ns  loc: array_io.c:67
:98  %tmp_4_13 = add i16 %d_i_0_load_14, %tmp_4_6

ST_10: d_i_0_load_15 (116)  [1/2] 2.39ns  loc: array_io.c:66
:101  %d_i_0_load_15 = load i16* %d_i_0_addr_15, align 2

ST_10: StgValue_244 (149)  [1/1] 1.00ns  loc: array_io.c:67
:134  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_2, i16 %tmp_4_20)

ST_10: tmp_4_21 (153)  [1/1] 1.46ns  loc: array_io.c:67
:138  %tmp_4_21 = add i16 %d_i_1_load_6, %tmp_4_13

ST_10: tmp_2_22_cast (157)  [1/1] 0.00ns  loc: array_io.c:67
:142  %tmp_2_22_cast = sext i16 %d_i_1_load_7 to i17

ST_10: tmp_4_28 (230)  [1/1] 1.46ns  loc: array_io.c:67
:215  %tmp_4_28 = add i16 %d_i_1_load_13, %tmp_4_20

ST_10: StgValue_248 (231)  [1/1] 1.00ns  loc: array_io.c:67
:216  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_3, i16 %tmp_4_28)

ST_10: tmp19 (235)  [1/1] 1.44ns  loc: array_io.c:66
:220  %tmp19 = add i32 %acc_6_load, %tmp_2_6

ST_10: tmp21_cast (237)  [1/1] 0.00ns  loc: array_io.c:66
:222  %tmp21_cast = sext i17 %tmp21 to i18

ST_10: tmp20 (238)  [1/1] 1.52ns  loc: array_io.c:66
:223  %tmp20 = add i18 %tmp21_cast, %tmp_2_13_cast

ST_10: tmp20_cast (239)  [1/1] 0.00ns  loc: array_io.c:66
:224  %tmp20_cast = sext i18 %tmp20 to i32

ST_10: tmp_3_6 (240)  [1/1] 1.44ns  loc: array_io.c:66
:225  %tmp_3_6 = add nsw i32 %tmp20_cast, %tmp19

ST_10: StgValue_254 (241)  [1/1] 0.00ns  loc: array_io.c:66
:226  store i32 %tmp_3_6, i32* @acc_6, align 8

ST_10: tmp_2_30_cast (246)  [1/1] 0.00ns  loc: array_io.c:66
:231  %tmp_2_30_cast = sext i16 %d_i_1_load_15 to i17

ST_10: tmp24 (248)  [1/1] 1.46ns  loc: array_io.c:66
:233  %tmp24 = add i17 %tmp_2_22_cast, %tmp_2_30_cast


 <State 11>: 2.96ns
ST_11: StgValue_257 (72)  [1/1] 1.00ns  loc: array_io.c:67
:57  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_0, i16 %tmp_4_6)

ST_11: tmp_2_7 (76)  [1/1] 0.00ns  loc: array_io.c:66
:61  %tmp_2_7 = sext i16 %d_i_0_load_7 to i32

ST_11: StgValue_259 (114)  [1/1] 1.00ns  loc: array_io.c:67
:99  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_1, i16 %tmp_4_13)

ST_11: tmp_2_14_cast (117)  [1/1] 0.00ns  loc: array_io.c:67
:102  %tmp_2_14_cast = sext i16 %d_i_0_load_15 to i18

ST_11: tmp_4_14 (118)  [1/1] 1.46ns  loc: array_io.c:67
:103  %tmp_4_14 = add i16 %d_i_0_load_15, %tmp_4_7

ST_11: StgValue_262 (154)  [1/1] 1.00ns  loc: array_io.c:67
:139  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_2, i16 %tmp_4_21)

ST_11: tmp_4_22 (158)  [1/1] 1.46ns  loc: array_io.c:67
:143  %tmp_4_22 = add i16 %d_i_1_load_7, %tmp_4_14

ST_11: tmp_4_29 (242)  [1/1] 1.46ns  loc: array_io.c:67
:227  %tmp_4_29 = add i16 %d_i_1_load_14, %tmp_4_21

ST_11: StgValue_265 (243)  [1/1] 1.00ns  loc: array_io.c:67
:228  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_3, i16 %tmp_4_29)

ST_11: tmp22 (247)  [1/1] 1.44ns  loc: array_io.c:66
:232  %tmp22 = add i32 %acc_7_load, %tmp_2_7

ST_11: tmp24_cast (249)  [1/1] 0.00ns  loc: array_io.c:66
:234  %tmp24_cast = sext i17 %tmp24 to i18

ST_11: tmp23 (250)  [1/1] 1.52ns  loc: array_io.c:66
:235  %tmp23 = add i18 %tmp24_cast, %tmp_2_14_cast

ST_11: tmp23_cast (251)  [1/1] 0.00ns  loc: array_io.c:66
:236  %tmp23_cast = sext i18 %tmp23 to i32

ST_11: tmp_3_7 (252)  [1/1] 1.44ns  loc: array_io.c:66
:237  %tmp_3_7 = add nsw i32 %tmp23_cast, %tmp22

ST_11: StgValue_271 (253)  [1/1] 0.00ns  loc: array_io.c:66
:238  store i32 %tmp_3_7, i32* @acc_7, align 4


 <State 12>: 2.46ns
ST_12: StgValue_272 (15)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o_3), !map !7

ST_12: StgValue_273 (16)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o_2), !map !13

ST_12: StgValue_274 (17)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o_1), !map !19

ST_12: StgValue_275 (18)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o_0), !map !25

ST_12: StgValue_276 (19)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecBitsMap([16 x i16]* %d_i_1), !map !31

ST_12: StgValue_277 (20)  [1/1] 0.00ns
:5  call void (...)* @_ssdm_op_SpecBitsMap([16 x i16]* %d_i_0), !map !37

ST_12: StgValue_278 (21)  [1/1] 0.00ns
:6  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @array_io_str) nounwind

ST_12: StgValue_279 (22)  [1/1] 0.00ns
:7  call void (...)* @_ssdm_op_SpecInterface(i16* %d_o_0, i16* %d_o_1, i16* %d_o_2, i16* %d_o_3, [8 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_12: StgValue_280 (23)  [1/1] 0.00ns
:8  call void (...)* @_ssdm_op_SpecMemCore([16 x i16]* %d_i_0, [16 x i16]* %d_i_1, [1 x i8]* @p_str1, [12 x i8]* @p_str3, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_12: StgValue_281 (79)  [1/1] 1.00ns  loc: array_io.c:67
:64  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_0, i16 %tmp_4_7)

ST_12: StgValue_282 (119)  [1/1] 1.00ns  loc: array_io.c:67
:104  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_1, i16 %tmp_4_14)

ST_12: StgValue_283 (159)  [1/1] 1.00ns  loc: array_io.c:67
:144  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_2, i16 %tmp_4_22)

ST_12: tmp_4_30 (254)  [1/1] 1.46ns  loc: array_io.c:67
:239  %tmp_4_30 = add i16 %d_i_1_load_15, %tmp_4_22

ST_12: StgValue_285 (255)  [1/1] 1.00ns  loc: array_io.c:67
:240  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o_3, i16 %tmp_4_30)

ST_12: StgValue_286 (256)  [1/1] 0.00ns  loc: array_io.c:69
:241  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 2.39ns
The critical path consists of the following:
	'getelementptr' operation ('d_i_0_addr') [25]  (0 ns)
	'load' operation ('d_i_0_load', array_io.c:66) on array 'd_i_0' [26]  (2.39 ns)

 <State 2>: 2.39ns
The critical path consists of the following:
	'load' operation ('d_i_0_load', array_io.c:66) on array 'd_i_0' [26]  (2.39 ns)

 <State 3>: 2.39ns
The critical path consists of the following:
	'load' operation ('d_i_0_load_1', array_io.c:66) on array 'd_i_0' [33]  (2.39 ns)

 <State 4>: 2.96ns
The critical path consists of the following:
	'add' operation ('tmp2', array_io.c:66) [166]  (1.52 ns)
	'add' operation ('tmp_3_s', array_io.c:66) [168]  (1.44 ns)

 <State 5>: 2.96ns
The critical path consists of the following:
	'add' operation ('tmp5', array_io.c:66) [178]  (1.52 ns)
	'add' operation ('tmp_3_1', array_io.c:66) [180]  (1.44 ns)

 <State 6>: 2.96ns
The critical path consists of the following:
	'add' operation ('tmp8', array_io.c:66) [190]  (1.52 ns)
	'add' operation ('tmp_3_2', array_io.c:66) [192]  (1.44 ns)

 <State 7>: 2.96ns
The critical path consists of the following:
	'add' operation ('tmp11', array_io.c:66) [202]  (1.52 ns)
	'add' operation ('tmp_3_3', array_io.c:66) [204]  (1.44 ns)

 <State 8>: 2.96ns
The critical path consists of the following:
	'add' operation ('tmp14', array_io.c:66) [214]  (1.52 ns)
	'add' operation ('tmp_3_4', array_io.c:66) [216]  (1.44 ns)

 <State 9>: 2.96ns
The critical path consists of the following:
	'add' operation ('tmp17', array_io.c:66) [226]  (1.52 ns)
	'add' operation ('tmp_3_5', array_io.c:66) [228]  (1.44 ns)

 <State 10>: 2.96ns
The critical path consists of the following:
	'add' operation ('tmp20', array_io.c:66) [238]  (1.52 ns)
	'add' operation ('tmp_3_6', array_io.c:66) [240]  (1.44 ns)

 <State 11>: 2.96ns
The critical path consists of the following:
	'add' operation ('tmp23', array_io.c:66) [250]  (1.52 ns)
	'add' operation ('tmp_3_7', array_io.c:66) [252]  (1.44 ns)

 <State 12>: 2.46ns
The critical path consists of the following:
	'add' operation ('tmp_4_30', array_io.c:67) [254]  (1.46 ns)
	fifo write on port 'd_o_3' (array_io.c:67) [255]  (1 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
