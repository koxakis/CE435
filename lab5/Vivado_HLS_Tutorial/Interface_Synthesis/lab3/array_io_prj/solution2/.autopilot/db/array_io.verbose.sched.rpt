

================================================================
== Vivado HLS Report for 'array_io'
================================================================
* Date:           Mon May 15 21:04:35 2017

* Version:        2016.4 (Build 1756540 on Mon Jan 23 19:31:01 MST 2017)
* Project:        array_io_prj
* Solution:       solution2
* Product family: kintex7
* Target device:  xc7k160tfbg484-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |   4.00|      2.98|        0.50|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |   33|   33|   34|   34|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states: 34
* Pipeline: 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	26  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
* FSM state operations: 

 <State 1>: 2.39ns
ST_1: d_i_addr (17)  [1/1] 0.00ns  loc: array_io.c:66
:6  %d_i_addr = getelementptr [32 x i16]* %d_i, i64 0, i64 0

ST_1: d_i_load (18)  [2/2] 2.39ns  loc: array_io.c:66
:7  %d_i_load = load i16* %d_i_addr, align 2

ST_1: d_i_addr_1 (24)  [1/1] 0.00ns  loc: array_io.c:66
:13  %d_i_addr_1 = getelementptr [32 x i16]* %d_i, i64 0, i64 1

ST_1: d_i_load_1 (25)  [2/2] 2.39ns  loc: array_io.c:66
:14  %d_i_load_1 = load i16* %d_i_addr_1, align 2


 <State 2>: 2.39ns
ST_2: d_i_load (18)  [1/2] 2.39ns  loc: array_io.c:66
:7  %d_i_load = load i16* %d_i_addr, align 2

ST_2: d_i_load_1 (25)  [1/2] 2.39ns  loc: array_io.c:66
:14  %d_i_load_1 = load i16* %d_i_addr_1, align 2

ST_2: d_i_addr_2 (31)  [1/1] 0.00ns  loc: array_io.c:66
:20  %d_i_addr_2 = getelementptr [32 x i16]* %d_i, i64 0, i64 2

ST_2: d_i_load_2 (32)  [2/2] 2.39ns  loc: array_io.c:66
:21  %d_i_load_2 = load i16* %d_i_addr_2, align 2

ST_2: d_i_addr_3 (38)  [1/1] 0.00ns  loc: array_io.c:66
:27  %d_i_addr_3 = getelementptr [32 x i16]* %d_i, i64 0, i64 3

ST_2: d_i_load_3 (39)  [2/2] 2.39ns  loc: array_io.c:66
:28  %d_i_load_3 = load i16* %d_i_addr_3, align 2


 <State 3>: 2.46ns
ST_3: acc_0_load (16)  [1/1] 0.00ns  loc: array_io.c:66
:5  %acc_0_load = load i32* @acc_0, align 4

ST_3: tmp (20)  [1/1] 0.00ns  loc: array_io.c:66
:9  %tmp = trunc i32 %acc_0_load to i16

ST_3: tmp_s (21)  [1/1] 1.46ns  loc: array_io.c:67
:10  %tmp_s = add i16 %d_i_load, %tmp

ST_3: StgValue_48 (22)  [1/1] 1.00ns  loc: array_io.c:67
:11  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_s) nounwind

ST_3: d_i_load_2 (32)  [1/2] 2.39ns  loc: array_io.c:66
:21  %d_i_load_2 = load i16* %d_i_addr_2, align 2

ST_3: d_i_load_3 (39)  [1/2] 2.39ns  loc: array_io.c:66
:28  %d_i_load_3 = load i16* %d_i_addr_3, align 2

ST_3: d_i_addr_4 (45)  [1/1] 0.00ns  loc: array_io.c:66
:34  %d_i_addr_4 = getelementptr [32 x i16]* %d_i, i64 0, i64 4

ST_3: d_i_load_4 (46)  [2/2] 2.39ns  loc: array_io.c:66
:35  %d_i_load_4 = load i16* %d_i_addr_4, align 2

ST_3: d_i_addr_5 (52)  [1/1] 0.00ns  loc: array_io.c:66
:41  %d_i_addr_5 = getelementptr [32 x i16]* %d_i, i64 0, i64 5

ST_3: d_i_load_5 (53)  [2/2] 2.39ns  loc: array_io.c:66
:42  %d_i_load_5 = load i16* %d_i_addr_5, align 2


 <State 4>: 2.46ns
ST_4: acc_1_load (23)  [1/1] 0.00ns  loc: array_io.c:66
:12  %acc_1_load = load i32* @acc_1, align 4

ST_4: tmp_1 (27)  [1/1] 0.00ns  loc: array_io.c:66
:16  %tmp_1 = trunc i32 %acc_1_load to i16

ST_4: tmp_4_1 (28)  [1/1] 1.46ns  loc: array_io.c:67
:17  %tmp_4_1 = add i16 %d_i_load_1, %tmp_1

ST_4: StgValue_58 (29)  [1/1] 1.00ns  loc: array_io.c:67
:18  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_1) nounwind

ST_4: d_i_load_4 (46)  [1/2] 2.39ns  loc: array_io.c:66
:35  %d_i_load_4 = load i16* %d_i_addr_4, align 2

ST_4: d_i_load_5 (53)  [1/2] 2.39ns  loc: array_io.c:66
:42  %d_i_load_5 = load i16* %d_i_addr_5, align 2

ST_4: d_i_addr_6 (59)  [1/1] 0.00ns  loc: array_io.c:66
:48  %d_i_addr_6 = getelementptr [32 x i16]* %d_i, i64 0, i64 6

ST_4: d_i_load_6 (60)  [2/2] 2.39ns  loc: array_io.c:66
:49  %d_i_load_6 = load i16* %d_i_addr_6, align 2

ST_4: d_i_addr_7 (66)  [1/1] 0.00ns  loc: array_io.c:66
:55  %d_i_addr_7 = getelementptr [32 x i16]* %d_i, i64 0, i64 7

ST_4: d_i_load_7 (67)  [2/2] 2.39ns  loc: array_io.c:66
:56  %d_i_load_7 = load i16* %d_i_addr_7, align 2


 <State 5>: 2.46ns
ST_5: acc_2_load (30)  [1/1] 0.00ns  loc: array_io.c:66
:19  %acc_2_load = load i32* @acc_2, align 4

ST_5: tmp_3 (34)  [1/1] 0.00ns  loc: array_io.c:66
:23  %tmp_3 = trunc i32 %acc_2_load to i16

ST_5: tmp_4_2 (35)  [1/1] 1.46ns  loc: array_io.c:67
:24  %tmp_4_2 = add i16 %d_i_load_2, %tmp_3

ST_5: StgValue_68 (36)  [1/1] 1.00ns  loc: array_io.c:67
:25  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_2) nounwind

ST_5: d_i_load_6 (60)  [1/2] 2.39ns  loc: array_io.c:66
:49  %d_i_load_6 = load i16* %d_i_addr_6, align 2

ST_5: d_i_load_7 (67)  [1/2] 2.39ns  loc: array_io.c:66
:56  %d_i_load_7 = load i16* %d_i_addr_7, align 2

ST_5: d_i_addr_8 (72)  [1/1] 0.00ns  loc: array_io.c:66
:61  %d_i_addr_8 = getelementptr [32 x i16]* %d_i, i64 0, i64 8

ST_5: d_i_load_8 (73)  [2/2] 2.39ns  loc: array_io.c:66
:62  %d_i_load_8 = load i16* %d_i_addr_8, align 2

ST_5: d_i_addr_9 (77)  [1/1] 0.00ns  loc: array_io.c:66
:66  %d_i_addr_9 = getelementptr [32 x i16]* %d_i, i64 0, i64 9

ST_5: d_i_load_9 (78)  [2/2] 2.39ns  loc: array_io.c:66
:67  %d_i_load_9 = load i16* %d_i_addr_9, align 2


 <State 6>: 2.46ns
ST_6: acc_3_load (37)  [1/1] 0.00ns  loc: array_io.c:66
:26  %acc_3_load = load i32* @acc_3, align 4

ST_6: tmp_4 (41)  [1/1] 0.00ns  loc: array_io.c:66
:30  %tmp_4 = trunc i32 %acc_3_load to i16

ST_6: tmp_4_3 (42)  [1/1] 1.46ns  loc: array_io.c:67
:31  %tmp_4_3 = add i16 %d_i_load_3, %tmp_4

ST_6: StgValue_78 (43)  [1/1] 1.00ns  loc: array_io.c:67
:32  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_3) nounwind

ST_6: d_i_load_8 (73)  [1/2] 2.39ns  loc: array_io.c:66
:62  %d_i_load_8 = load i16* %d_i_addr_8, align 2

ST_6: d_i_load_9 (78)  [1/2] 2.39ns  loc: array_io.c:66
:67  %d_i_load_9 = load i16* %d_i_addr_9, align 2

ST_6: d_i_addr_10 (82)  [1/1] 0.00ns  loc: array_io.c:66
:71  %d_i_addr_10 = getelementptr [32 x i16]* %d_i, i64 0, i64 10

ST_6: d_i_load_10 (83)  [2/2] 2.39ns  loc: array_io.c:66
:72  %d_i_load_10 = load i16* %d_i_addr_10, align 2

ST_6: d_i_addr_11 (87)  [1/1] 0.00ns  loc: array_io.c:66
:76  %d_i_addr_11 = getelementptr [32 x i16]* %d_i, i64 0, i64 11

ST_6: d_i_load_11 (88)  [2/2] 2.39ns  loc: array_io.c:66
:77  %d_i_load_11 = load i16* %d_i_addr_11, align 2


 <State 7>: 2.46ns
ST_7: acc_4_load (44)  [1/1] 0.00ns  loc: array_io.c:66
:33  %acc_4_load = load i32* @acc_4, align 4

ST_7: tmp_5 (48)  [1/1] 0.00ns  loc: array_io.c:66
:37  %tmp_5 = trunc i32 %acc_4_load to i16

ST_7: tmp_4_4 (49)  [1/1] 1.46ns  loc: array_io.c:67
:38  %tmp_4_4 = add i16 %d_i_load_4, %tmp_5

ST_7: StgValue_88 (50)  [1/1] 1.00ns  loc: array_io.c:67
:39  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_4) nounwind

ST_7: d_i_load_10 (83)  [1/2] 2.39ns  loc: array_io.c:66
:72  %d_i_load_10 = load i16* %d_i_addr_10, align 2

ST_7: d_i_load_11 (88)  [1/2] 2.39ns  loc: array_io.c:66
:77  %d_i_load_11 = load i16* %d_i_addr_11, align 2

ST_7: d_i_addr_12 (92)  [1/1] 0.00ns  loc: array_io.c:66
:81  %d_i_addr_12 = getelementptr [32 x i16]* %d_i, i64 0, i64 12

ST_7: d_i_load_12 (93)  [2/2] 2.39ns  loc: array_io.c:66
:82  %d_i_load_12 = load i16* %d_i_addr_12, align 2

ST_7: d_i_addr_13 (97)  [1/1] 0.00ns  loc: array_io.c:66
:86  %d_i_addr_13 = getelementptr [32 x i16]* %d_i, i64 0, i64 13

ST_7: d_i_load_13 (98)  [2/2] 2.39ns  loc: array_io.c:66
:87  %d_i_load_13 = load i16* %d_i_addr_13, align 2


 <State 8>: 2.46ns
ST_8: acc_5_load (51)  [1/1] 0.00ns  loc: array_io.c:66
:40  %acc_5_load = load i32* @acc_5, align 4

ST_8: tmp_6 (55)  [1/1] 0.00ns  loc: array_io.c:66
:44  %tmp_6 = trunc i32 %acc_5_load to i16

ST_8: tmp_4_5 (56)  [1/1] 1.46ns  loc: array_io.c:67
:45  %tmp_4_5 = add i16 %d_i_load_5, %tmp_6

ST_8: StgValue_98 (57)  [1/1] 1.00ns  loc: array_io.c:67
:46  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_5) nounwind

ST_8: d_i_load_12 (93)  [1/2] 2.39ns  loc: array_io.c:66
:82  %d_i_load_12 = load i16* %d_i_addr_12, align 2

ST_8: d_i_load_13 (98)  [1/2] 2.39ns  loc: array_io.c:66
:87  %d_i_load_13 = load i16* %d_i_addr_13, align 2

ST_8: d_i_addr_14 (102)  [1/1] 0.00ns  loc: array_io.c:66
:91  %d_i_addr_14 = getelementptr [32 x i16]* %d_i, i64 0, i64 14

ST_8: d_i_load_14 (103)  [2/2] 2.39ns  loc: array_io.c:66
:92  %d_i_load_14 = load i16* %d_i_addr_14, align 2

ST_8: d_i_addr_15 (107)  [1/1] 0.00ns  loc: array_io.c:66
:96  %d_i_addr_15 = getelementptr [32 x i16]* %d_i, i64 0, i64 15

ST_8: d_i_load_15 (108)  [2/2] 2.39ns  loc: array_io.c:66
:97  %d_i_load_15 = load i16* %d_i_addr_15, align 2


 <State 9>: 2.46ns
ST_9: acc_6_load (58)  [1/1] 0.00ns  loc: array_io.c:66
:47  %acc_6_load = load i32* @acc_6, align 4

ST_9: tmp_7 (62)  [1/1] 0.00ns  loc: array_io.c:66
:51  %tmp_7 = trunc i32 %acc_6_load to i16

ST_9: tmp_4_6 (63)  [1/1] 1.46ns  loc: array_io.c:67
:52  %tmp_4_6 = add i16 %d_i_load_6, %tmp_7

ST_9: StgValue_108 (64)  [1/1] 1.00ns  loc: array_io.c:67
:53  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_6) nounwind

ST_9: d_i_load_14 (103)  [1/2] 2.39ns  loc: array_io.c:66
:92  %d_i_load_14 = load i16* %d_i_addr_14, align 2

ST_9: d_i_load_15 (108)  [1/2] 2.39ns  loc: array_io.c:66
:97  %d_i_load_15 = load i16* %d_i_addr_15, align 2

ST_9: d_i_addr_16 (112)  [1/1] 0.00ns  loc: array_io.c:66
:101  %d_i_addr_16 = getelementptr [32 x i16]* %d_i, i64 0, i64 16

ST_9: d_i_load_16 (113)  [2/2] 2.39ns  loc: array_io.c:66
:102  %d_i_load_16 = load i16* %d_i_addr_16, align 2

ST_9: d_i_addr_17 (117)  [1/1] 0.00ns  loc: array_io.c:66
:106  %d_i_addr_17 = getelementptr [32 x i16]* %d_i, i64 0, i64 17

ST_9: d_i_load_17 (118)  [2/2] 2.39ns  loc: array_io.c:66
:107  %d_i_load_17 = load i16* %d_i_addr_17, align 2


 <State 10>: 2.46ns
ST_10: acc_7_load (65)  [1/1] 0.00ns  loc: array_io.c:66
:54  %acc_7_load = load i32* @acc_7, align 4

ST_10: tmp_8 (69)  [1/1] 0.00ns  loc: array_io.c:66
:58  %tmp_8 = trunc i32 %acc_7_load to i16

ST_10: tmp_4_7 (70)  [1/1] 1.46ns  loc: array_io.c:67
:59  %tmp_4_7 = add i16 %d_i_load_7, %tmp_8

ST_10: StgValue_118 (71)  [1/1] 1.00ns  loc: array_io.c:67
:60  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_7) nounwind

ST_10: d_i_load_16 (113)  [1/2] 2.39ns  loc: array_io.c:66
:102  %d_i_load_16 = load i16* %d_i_addr_16, align 2

ST_10: d_i_load_17 (118)  [1/2] 2.39ns  loc: array_io.c:66
:107  %d_i_load_17 = load i16* %d_i_addr_17, align 2

ST_10: d_i_addr_18 (122)  [1/1] 0.00ns  loc: array_io.c:66
:111  %d_i_addr_18 = getelementptr [32 x i16]* %d_i, i64 0, i64 18

ST_10: d_i_load_18 (123)  [2/2] 2.39ns  loc: array_io.c:66
:112  %d_i_load_18 = load i16* %d_i_addr_18, align 2

ST_10: d_i_addr_19 (127)  [1/1] 0.00ns  loc: array_io.c:66
:116  %d_i_addr_19 = getelementptr [32 x i16]* %d_i, i64 0, i64 19

ST_10: d_i_load_19 (128)  [2/2] 2.39ns  loc: array_io.c:66
:117  %d_i_load_19 = load i16* %d_i_addr_19, align 2


 <State 11>: 2.46ns
ST_11: tmp_4_8 (75)  [1/1] 1.46ns  loc: array_io.c:67
:64  %tmp_4_8 = add i16 %d_i_load_8, %tmp_s

ST_11: StgValue_126 (76)  [1/1] 1.00ns  loc: array_io.c:67
:65  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_8) nounwind

ST_11: d_i_load_18 (123)  [1/2] 2.39ns  loc: array_io.c:66
:112  %d_i_load_18 = load i16* %d_i_addr_18, align 2

ST_11: d_i_load_19 (128)  [1/2] 2.39ns  loc: array_io.c:66
:117  %d_i_load_19 = load i16* %d_i_addr_19, align 2

ST_11: d_i_addr_20 (132)  [1/1] 0.00ns  loc: array_io.c:66
:121  %d_i_addr_20 = getelementptr [32 x i16]* %d_i, i64 0, i64 20

ST_11: d_i_load_20 (133)  [2/2] 2.39ns  loc: array_io.c:66
:122  %d_i_load_20 = load i16* %d_i_addr_20, align 2

ST_11: d_i_addr_21 (137)  [1/1] 0.00ns  loc: array_io.c:66
:126  %d_i_addr_21 = getelementptr [32 x i16]* %d_i, i64 0, i64 21

ST_11: d_i_load_21 (138)  [2/2] 2.39ns  loc: array_io.c:66
:127  %d_i_load_21 = load i16* %d_i_addr_21, align 2


 <State 12>: 2.46ns
ST_12: tmp_4_9 (80)  [1/1] 1.46ns  loc: array_io.c:67
:69  %tmp_4_9 = add i16 %d_i_load_9, %tmp_4_1

ST_12: StgValue_134 (81)  [1/1] 1.00ns  loc: array_io.c:67
:70  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_9) nounwind

ST_12: d_i_load_20 (133)  [1/2] 2.39ns  loc: array_io.c:66
:122  %d_i_load_20 = load i16* %d_i_addr_20, align 2

ST_12: d_i_load_21 (138)  [1/2] 2.39ns  loc: array_io.c:66
:127  %d_i_load_21 = load i16* %d_i_addr_21, align 2

ST_12: d_i_addr_22 (142)  [1/1] 0.00ns  loc: array_io.c:66
:131  %d_i_addr_22 = getelementptr [32 x i16]* %d_i, i64 0, i64 22

ST_12: d_i_load_22 (143)  [2/2] 2.39ns  loc: array_io.c:66
:132  %d_i_load_22 = load i16* %d_i_addr_22, align 2

ST_12: d_i_addr_23 (147)  [1/1] 0.00ns  loc: array_io.c:66
:136  %d_i_addr_23 = getelementptr [32 x i16]* %d_i, i64 0, i64 23

ST_12: d_i_load_23 (148)  [2/2] 2.39ns  loc: array_io.c:66
:137  %d_i_load_23 = load i16* %d_i_addr_23, align 2


 <State 13>: 2.46ns
ST_13: tmp_4_s (85)  [1/1] 1.46ns  loc: array_io.c:67
:74  %tmp_4_s = add i16 %d_i_load_10, %tmp_4_2

ST_13: StgValue_142 (86)  [1/1] 1.00ns  loc: array_io.c:67
:75  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_s) nounwind

ST_13: d_i_load_22 (143)  [1/2] 2.39ns  loc: array_io.c:66
:132  %d_i_load_22 = load i16* %d_i_addr_22, align 2

ST_13: d_i_load_23 (148)  [1/2] 2.39ns  loc: array_io.c:66
:137  %d_i_load_23 = load i16* %d_i_addr_23, align 2

ST_13: d_i_addr_24 (152)  [1/1] 0.00ns  loc: array_io.c:66
:141  %d_i_addr_24 = getelementptr [32 x i16]* %d_i, i64 0, i64 24

ST_13: d_i_load_24 (153)  [2/2] 2.39ns  loc: array_io.c:66
:142  %d_i_load_24 = load i16* %d_i_addr_24, align 2

ST_13: d_i_addr_25 (164)  [1/1] 0.00ns  loc: array_io.c:66
:153  %d_i_addr_25 = getelementptr [32 x i16]* %d_i, i64 0, i64 25

ST_13: d_i_load_25 (165)  [2/2] 2.39ns  loc: array_io.c:66
:154  %d_i_load_25 = load i16* %d_i_addr_25, align 2


 <State 14>: 2.46ns
ST_14: tmp_4_10 (90)  [1/1] 1.46ns  loc: array_io.c:67
:79  %tmp_4_10 = add i16 %d_i_load_11, %tmp_4_3

ST_14: StgValue_150 (91)  [1/1] 1.00ns  loc: array_io.c:67
:80  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_10) nounwind

ST_14: d_i_load_24 (153)  [1/2] 2.39ns  loc: array_io.c:66
:142  %d_i_load_24 = load i16* %d_i_addr_24, align 2

ST_14: d_i_load_25 (165)  [1/2] 2.39ns  loc: array_io.c:66
:154  %d_i_load_25 = load i16* %d_i_addr_25, align 2

ST_14: d_i_addr_26 (176)  [1/1] 0.00ns  loc: array_io.c:66
:165  %d_i_addr_26 = getelementptr [32 x i16]* %d_i, i64 0, i64 26

ST_14: d_i_load_26 (177)  [2/2] 2.39ns  loc: array_io.c:66
:166  %d_i_load_26 = load i16* %d_i_addr_26, align 2

ST_14: d_i_addr_27 (188)  [1/1] 0.00ns  loc: array_io.c:66
:177  %d_i_addr_27 = getelementptr [32 x i16]* %d_i, i64 0, i64 27

ST_14: d_i_load_27 (189)  [2/2] 2.39ns  loc: array_io.c:66
:178  %d_i_load_27 = load i16* %d_i_addr_27, align 2


 <State 15>: 2.98ns
ST_15: tmp_2_8_cast (74)  [1/1] 0.00ns  loc: array_io.c:67
:63  %tmp_2_8_cast = sext i16 %d_i_load_8 to i18

ST_15: tmp_2_9_cast (79)  [1/1] 0.00ns  loc: array_io.c:67
:68  %tmp_2_9_cast = sext i16 %d_i_load_9 to i18

ST_15: tmp_4_11 (95)  [1/1] 1.46ns  loc: array_io.c:67
:84  %tmp_4_11 = add i16 %d_i_load_12, %tmp_4_4

ST_15: StgValue_160 (96)  [1/1] 1.00ns  loc: array_io.c:67
:85  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_11) nounwind

ST_15: tmp_2_15_cast (114)  [1/1] 0.00ns  loc: array_io.c:67
:103  %tmp_2_15_cast = sext i16 %d_i_load_16 to i17

ST_15: tmp_4_15 (115)  [1/1] 1.46ns  loc: array_io.c:67
:104  %tmp_4_15 = add i16 %d_i_load_16, %tmp_4_8

ST_15: tmp_2_16_cast (119)  [1/1] 0.00ns  loc: array_io.c:67
:108  %tmp_2_16_cast = sext i16 %d_i_load_17 to i17

ST_15: tmp_4_16 (120)  [1/1] 1.46ns  loc: array_io.c:67
:109  %tmp_4_16 = add i16 %d_i_load_17, %tmp_4_9

ST_15: tmp_2_23_cast (154)  [1/1] 0.00ns  loc: array_io.c:66
:143  %tmp_2_23_cast = sext i16 %d_i_load_24 to i17

ST_15: tmp3 (156)  [1/1] 1.46ns  loc: array_io.c:66
:145  %tmp3 = add i17 %tmp_2_15_cast, %tmp_2_23_cast

ST_15: tmp3_cast (157)  [1/1] 0.00ns  loc: array_io.c:66
:146  %tmp3_cast = sext i17 %tmp3 to i18

ST_15: tmp2 (158)  [1/1] 1.52ns  loc: array_io.c:66
:147  %tmp2 = add i18 %tmp3_cast, %tmp_2_8_cast

ST_15: tmp_2_24_cast (166)  [1/1] 0.00ns  loc: array_io.c:66
:155  %tmp_2_24_cast = sext i16 %d_i_load_25 to i17

ST_15: tmp6 (168)  [1/1] 1.46ns  loc: array_io.c:66
:157  %tmp6 = add i17 %tmp_2_16_cast, %tmp_2_24_cast

ST_15: tmp6_cast (169)  [1/1] 0.00ns  loc: array_io.c:66
:158  %tmp6_cast = sext i17 %tmp6 to i18

ST_15: tmp5 (170)  [1/1] 1.52ns  loc: array_io.c:66
:159  %tmp5 = add i18 %tmp6_cast, %tmp_2_9_cast

ST_15: d_i_load_26 (177)  [1/2] 2.39ns  loc: array_io.c:66
:166  %d_i_load_26 = load i16* %d_i_addr_26, align 2

ST_15: d_i_load_27 (189)  [1/2] 2.39ns  loc: array_io.c:66
:178  %d_i_load_27 = load i16* %d_i_addr_27, align 2

ST_15: d_i_addr_28 (200)  [1/1] 0.00ns  loc: array_io.c:66
:189  %d_i_addr_28 = getelementptr [32 x i16]* %d_i, i64 0, i64 28

ST_15: d_i_load_28 (201)  [2/2] 2.39ns  loc: array_io.c:66
:190  %d_i_load_28 = load i16* %d_i_addr_28, align 2

ST_15: d_i_addr_29 (212)  [1/1] 0.00ns  loc: array_io.c:66
:201  %d_i_addr_29 = getelementptr [32 x i16]* %d_i, i64 0, i64 29

ST_15: d_i_load_29 (213)  [2/2] 2.39ns  loc: array_io.c:66
:202  %d_i_load_29 = load i16* %d_i_addr_29, align 2


 <State 16>: 2.98ns
ST_16: tmp_2 (19)  [1/1] 0.00ns  loc: array_io.c:66
:8  %tmp_2 = sext i16 %d_i_load to i32

ST_16: tmp_2_1 (26)  [1/1] 0.00ns  loc: array_io.c:66
:15  %tmp_2_1 = sext i16 %d_i_load_1 to i32

ST_16: tmp_2_cast (84)  [1/1] 0.00ns  loc: array_io.c:67
:73  %tmp_2_cast = sext i16 %d_i_load_10 to i18

ST_16: tmp_2_10_cast (89)  [1/1] 0.00ns  loc: array_io.c:67
:78  %tmp_2_10_cast = sext i16 %d_i_load_11 to i18

ST_16: tmp_4_12 (100)  [1/1] 1.46ns  loc: array_io.c:67
:89  %tmp_4_12 = add i16 %d_i_load_13, %tmp_4_5

ST_16: StgValue_184 (101)  [1/1] 1.00ns  loc: array_io.c:67
:90  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_12) nounwind

ST_16: tmp_2_17_cast (124)  [1/1] 0.00ns  loc: array_io.c:67
:113  %tmp_2_17_cast = sext i16 %d_i_load_18 to i17

ST_16: tmp_4_17 (125)  [1/1] 1.46ns  loc: array_io.c:67
:114  %tmp_4_17 = add i16 %d_i_load_18, %tmp_4_s

ST_16: tmp_2_18_cast (129)  [1/1] 0.00ns  loc: array_io.c:67
:118  %tmp_2_18_cast = sext i16 %d_i_load_19 to i17

ST_16: tmp_4_18 (130)  [1/1] 1.46ns  loc: array_io.c:67
:119  %tmp_4_18 = add i16 %d_i_load_19, %tmp_4_10

ST_16: tmp1 (155)  [1/1] 1.44ns  loc: array_io.c:66
:144  %tmp1 = add i32 %acc_0_load, %tmp_2

ST_16: tmp2_cast (159)  [1/1] 0.00ns  loc: array_io.c:66
:148  %tmp2_cast = sext i18 %tmp2 to i32

ST_16: tmp_3_s (160)  [1/1] 1.44ns  loc: array_io.c:66
:149  %tmp_3_s = add nsw i32 %tmp2_cast, %tmp1

ST_16: StgValue_192 (161)  [1/1] 0.00ns  loc: array_io.c:66
:150  store i32 %tmp_3_s, i32* @acc_0, align 16

ST_16: tmp4 (167)  [1/1] 1.44ns  loc: array_io.c:66
:156  %tmp4 = add i32 %acc_1_load, %tmp_2_1

ST_16: tmp5_cast (171)  [1/1] 0.00ns  loc: array_io.c:66
:160  %tmp5_cast = sext i18 %tmp5 to i32

ST_16: tmp_3_1 (172)  [1/1] 1.44ns  loc: array_io.c:66
:161  %tmp_3_1 = add nsw i32 %tmp5_cast, %tmp4

ST_16: StgValue_196 (173)  [1/1] 0.00ns  loc: array_io.c:66
:162  store i32 %tmp_3_1, i32* @acc_1, align 4

ST_16: tmp_2_25_cast (178)  [1/1] 0.00ns  loc: array_io.c:66
:167  %tmp_2_25_cast = sext i16 %d_i_load_26 to i17

ST_16: tmp9 (180)  [1/1] 1.46ns  loc: array_io.c:66
:169  %tmp9 = add i17 %tmp_2_17_cast, %tmp_2_25_cast

ST_16: tmp9_cast (181)  [1/1] 0.00ns  loc: array_io.c:66
:170  %tmp9_cast = sext i17 %tmp9 to i18

ST_16: tmp8 (182)  [1/1] 1.52ns  loc: array_io.c:66
:171  %tmp8 = add i18 %tmp9_cast, %tmp_2_cast

ST_16: tmp_2_26_cast (190)  [1/1] 0.00ns  loc: array_io.c:66
:179  %tmp_2_26_cast = sext i16 %d_i_load_27 to i17

ST_16: tmp12 (192)  [1/1] 1.46ns  loc: array_io.c:66
:181  %tmp12 = add i17 %tmp_2_18_cast, %tmp_2_26_cast

ST_16: tmp12_cast (193)  [1/1] 0.00ns  loc: array_io.c:66
:182  %tmp12_cast = sext i17 %tmp12 to i18

ST_16: tmp11 (194)  [1/1] 1.52ns  loc: array_io.c:66
:183  %tmp11 = add i18 %tmp12_cast, %tmp_2_10_cast

ST_16: d_i_load_28 (201)  [1/2] 2.39ns  loc: array_io.c:66
:190  %d_i_load_28 = load i16* %d_i_addr_28, align 2

ST_16: d_i_load_29 (213)  [1/2] 2.39ns  loc: array_io.c:66
:202  %d_i_load_29 = load i16* %d_i_addr_29, align 2

ST_16: d_i_addr_30 (224)  [1/1] 0.00ns  loc: array_io.c:66
:213  %d_i_addr_30 = getelementptr [32 x i16]* %d_i, i64 0, i64 30

ST_16: d_i_load_30 (225)  [2/2] 2.39ns  loc: array_io.c:66
:214  %d_i_load_30 = load i16* %d_i_addr_30, align 2

ST_16: d_i_addr_31 (236)  [1/1] 0.00ns  loc: array_io.c:66
:225  %d_i_addr_31 = getelementptr [32 x i16]* %d_i, i64 0, i64 31

ST_16: d_i_load_31 (237)  [2/2] 2.39ns  loc: array_io.c:66
:226  %d_i_load_31 = load i16* %d_i_addr_31, align 2


 <State 17>: 2.98ns
ST_17: tmp_2_2 (33)  [1/1] 0.00ns  loc: array_io.c:66
:22  %tmp_2_2 = sext i16 %d_i_load_2 to i32

ST_17: tmp_2_3 (40)  [1/1] 0.00ns  loc: array_io.c:66
:29  %tmp_2_3 = sext i16 %d_i_load_3 to i32

ST_17: tmp_2_11_cast (94)  [1/1] 0.00ns  loc: array_io.c:67
:83  %tmp_2_11_cast = sext i16 %d_i_load_12 to i18

ST_17: tmp_2_12_cast (99)  [1/1] 0.00ns  loc: array_io.c:67
:88  %tmp_2_12_cast = sext i16 %d_i_load_13 to i18

ST_17: tmp_4_13 (105)  [1/1] 1.46ns  loc: array_io.c:67
:94  %tmp_4_13 = add i16 %d_i_load_14, %tmp_4_6

ST_17: StgValue_216 (106)  [1/1] 1.00ns  loc: array_io.c:67
:95  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_13) nounwind

ST_17: tmp_2_19_cast (134)  [1/1] 0.00ns  loc: array_io.c:67
:123  %tmp_2_19_cast = sext i16 %d_i_load_20 to i17

ST_17: tmp_4_19 (135)  [1/1] 1.46ns  loc: array_io.c:67
:124  %tmp_4_19 = add i16 %d_i_load_20, %tmp_4_11

ST_17: tmp_2_20_cast (139)  [1/1] 0.00ns  loc: array_io.c:67
:128  %tmp_2_20_cast = sext i16 %d_i_load_21 to i17

ST_17: tmp_4_20 (140)  [1/1] 1.46ns  loc: array_io.c:67
:129  %tmp_4_20 = add i16 %d_i_load_21, %tmp_4_12

ST_17: tmp7 (179)  [1/1] 1.44ns  loc: array_io.c:66
:168  %tmp7 = add i32 %acc_2_load, %tmp_2_2

ST_17: tmp8_cast (183)  [1/1] 0.00ns  loc: array_io.c:66
:172  %tmp8_cast = sext i18 %tmp8 to i32

ST_17: tmp_3_2 (184)  [1/1] 1.44ns  loc: array_io.c:66
:173  %tmp_3_2 = add nsw i32 %tmp8_cast, %tmp7

ST_17: StgValue_224 (185)  [1/1] 0.00ns  loc: array_io.c:66
:174  store i32 %tmp_3_2, i32* @acc_2, align 8

ST_17: tmp10 (191)  [1/1] 1.44ns  loc: array_io.c:66
:180  %tmp10 = add i32 %acc_3_load, %tmp_2_3

ST_17: tmp11_cast (195)  [1/1] 0.00ns  loc: array_io.c:66
:184  %tmp11_cast = sext i18 %tmp11 to i32

ST_17: tmp_3_3 (196)  [1/1] 1.44ns  loc: array_io.c:66
:185  %tmp_3_3 = add nsw i32 %tmp11_cast, %tmp10

ST_17: StgValue_228 (197)  [1/1] 0.00ns  loc: array_io.c:66
:186  store i32 %tmp_3_3, i32* @acc_3, align 4

ST_17: tmp_2_27_cast (202)  [1/1] 0.00ns  loc: array_io.c:66
:191  %tmp_2_27_cast = sext i16 %d_i_load_28 to i17

ST_17: tmp15 (204)  [1/1] 1.46ns  loc: array_io.c:66
:193  %tmp15 = add i17 %tmp_2_19_cast, %tmp_2_27_cast

ST_17: tmp15_cast (205)  [1/1] 0.00ns  loc: array_io.c:66
:194  %tmp15_cast = sext i17 %tmp15 to i18

ST_17: tmp14 (206)  [1/1] 1.52ns  loc: array_io.c:66
:195  %tmp14 = add i18 %tmp15_cast, %tmp_2_11_cast

ST_17: tmp_2_28_cast (214)  [1/1] 0.00ns  loc: array_io.c:66
:203  %tmp_2_28_cast = sext i16 %d_i_load_29 to i17

ST_17: tmp18 (216)  [1/1] 1.46ns  loc: array_io.c:66
:205  %tmp18 = add i17 %tmp_2_20_cast, %tmp_2_28_cast

ST_17: tmp18_cast (217)  [1/1] 0.00ns  loc: array_io.c:66
:206  %tmp18_cast = sext i17 %tmp18 to i18

ST_17: tmp17 (218)  [1/1] 1.52ns  loc: array_io.c:66
:207  %tmp17 = add i18 %tmp18_cast, %tmp_2_12_cast

ST_17: d_i_load_30 (225)  [1/2] 2.39ns  loc: array_io.c:66
:214  %d_i_load_30 = load i16* %d_i_addr_30, align 2

ST_17: d_i_load_31 (237)  [1/2] 2.39ns  loc: array_io.c:66
:226  %d_i_load_31 = load i16* %d_i_addr_31, align 2


 <State 18>: 2.98ns
ST_18: tmp_2_4 (47)  [1/1] 0.00ns  loc: array_io.c:66
:36  %tmp_2_4 = sext i16 %d_i_load_4 to i32

ST_18: tmp_2_5 (54)  [1/1] 0.00ns  loc: array_io.c:66
:43  %tmp_2_5 = sext i16 %d_i_load_5 to i32

ST_18: tmp_2_13_cast (104)  [1/1] 0.00ns  loc: array_io.c:67
:93  %tmp_2_13_cast = sext i16 %d_i_load_14 to i18

ST_18: tmp_2_14_cast (109)  [1/1] 0.00ns  loc: array_io.c:67
:98  %tmp_2_14_cast = sext i16 %d_i_load_15 to i18

ST_18: tmp_4_14 (110)  [1/1] 1.46ns  loc: array_io.c:67
:99  %tmp_4_14 = add i16 %d_i_load_15, %tmp_4_7

ST_18: StgValue_244 (111)  [1/1] 1.00ns  loc: array_io.c:67
:100  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_14) nounwind

ST_18: tmp_2_21_cast (144)  [1/1] 0.00ns  loc: array_io.c:67
:133  %tmp_2_21_cast = sext i16 %d_i_load_22 to i17

ST_18: tmp_4_21 (145)  [1/1] 1.46ns  loc: array_io.c:67
:134  %tmp_4_21 = add i16 %d_i_load_22, %tmp_4_13

ST_18: tmp_2_22_cast (149)  [1/1] 0.00ns  loc: array_io.c:67
:138  %tmp_2_22_cast = sext i16 %d_i_load_23 to i17

ST_18: tmp_4_22 (150)  [1/1] 1.46ns  loc: array_io.c:67
:139  %tmp_4_22 = add i16 %d_i_load_23, %tmp_4_14

ST_18: tmp13 (203)  [1/1] 1.44ns  loc: array_io.c:66
:192  %tmp13 = add i32 %acc_4_load, %tmp_2_4

ST_18: tmp14_cast (207)  [1/1] 0.00ns  loc: array_io.c:66
:196  %tmp14_cast = sext i18 %tmp14 to i32

ST_18: tmp_3_4 (208)  [1/1] 1.44ns  loc: array_io.c:66
:197  %tmp_3_4 = add nsw i32 %tmp14_cast, %tmp13

ST_18: StgValue_252 (209)  [1/1] 0.00ns  loc: array_io.c:66
:198  store i32 %tmp_3_4, i32* @acc_4, align 16

ST_18: tmp16 (215)  [1/1] 1.44ns  loc: array_io.c:66
:204  %tmp16 = add i32 %acc_5_load, %tmp_2_5

ST_18: tmp17_cast (219)  [1/1] 0.00ns  loc: array_io.c:66
:208  %tmp17_cast = sext i18 %tmp17 to i32

ST_18: tmp_3_5 (220)  [1/1] 1.44ns  loc: array_io.c:66
:209  %tmp_3_5 = add nsw i32 %tmp17_cast, %tmp16

ST_18: StgValue_256 (221)  [1/1] 0.00ns  loc: array_io.c:66
:210  store i32 %tmp_3_5, i32* @acc_5, align 4

ST_18: tmp_2_29_cast (226)  [1/1] 0.00ns  loc: array_io.c:66
:215  %tmp_2_29_cast = sext i16 %d_i_load_30 to i17

ST_18: tmp21 (228)  [1/1] 1.46ns  loc: array_io.c:66
:217  %tmp21 = add i17 %tmp_2_21_cast, %tmp_2_29_cast

ST_18: tmp21_cast (229)  [1/1] 0.00ns  loc: array_io.c:66
:218  %tmp21_cast = sext i17 %tmp21 to i18

ST_18: tmp20 (230)  [1/1] 1.52ns  loc: array_io.c:66
:219  %tmp20 = add i18 %tmp21_cast, %tmp_2_13_cast

ST_18: tmp_2_30_cast (238)  [1/1] 0.00ns  loc: array_io.c:66
:227  %tmp_2_30_cast = sext i16 %d_i_load_31 to i17

ST_18: tmp24 (240)  [1/1] 1.46ns  loc: array_io.c:66
:229  %tmp24 = add i17 %tmp_2_22_cast, %tmp_2_30_cast

ST_18: tmp24_cast (241)  [1/1] 0.00ns  loc: array_io.c:66
:230  %tmp24_cast = sext i17 %tmp24 to i18

ST_18: tmp23 (242)  [1/1] 1.52ns  loc: array_io.c:66
:231  %tmp23 = add i18 %tmp24_cast, %tmp_2_14_cast


 <State 19>: 2.88ns
ST_19: tmp_2_6 (61)  [1/1] 0.00ns  loc: array_io.c:66
:50  %tmp_2_6 = sext i16 %d_i_load_6 to i32

ST_19: tmp_2_7 (68)  [1/1] 0.00ns  loc: array_io.c:66
:57  %tmp_2_7 = sext i16 %d_i_load_7 to i32

ST_19: StgValue_267 (116)  [1/1] 1.00ns  loc: array_io.c:67
:105  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_15) nounwind

ST_19: tmp_4_23 (162)  [1/1] 1.46ns  loc: array_io.c:67
:151  %tmp_4_23 = add i16 %d_i_load_24, %tmp_4_15

ST_19: tmp19 (227)  [1/1] 1.44ns  loc: array_io.c:66
:216  %tmp19 = add i32 %acc_6_load, %tmp_2_6

ST_19: tmp20_cast (231)  [1/1] 0.00ns  loc: array_io.c:66
:220  %tmp20_cast = sext i18 %tmp20 to i32

ST_19: tmp_3_6 (232)  [1/1] 1.44ns  loc: array_io.c:66
:221  %tmp_3_6 = add nsw i32 %tmp20_cast, %tmp19

ST_19: StgValue_272 (233)  [1/1] 0.00ns  loc: array_io.c:66
:222  store i32 %tmp_3_6, i32* @acc_6, align 8

ST_19: tmp22 (239)  [1/1] 1.44ns  loc: array_io.c:66
:228  %tmp22 = add i32 %acc_7_load, %tmp_2_7

ST_19: tmp23_cast (243)  [1/1] 0.00ns  loc: array_io.c:66
:232  %tmp23_cast = sext i18 %tmp23 to i32

ST_19: tmp_3_7 (244)  [1/1] 1.44ns  loc: array_io.c:66
:233  %tmp_3_7 = add nsw i32 %tmp23_cast, %tmp22

ST_19: StgValue_276 (245)  [1/1] 0.00ns  loc: array_io.c:66
:234  store i32 %tmp_3_7, i32* @acc_7, align 4


 <State 20>: 1.46ns
ST_20: StgValue_277 (121)  [1/1] 1.00ns  loc: array_io.c:67
:110  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_16) nounwind

ST_20: tmp_4_24 (174)  [1/1] 1.46ns  loc: array_io.c:67
:163  %tmp_4_24 = add i16 %d_i_load_25, %tmp_4_16


 <State 21>: 1.46ns
ST_21: StgValue_279 (126)  [1/1] 1.00ns  loc: array_io.c:67
:115  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_17) nounwind

ST_21: tmp_4_25 (186)  [1/1] 1.46ns  loc: array_io.c:67
:175  %tmp_4_25 = add i16 %d_i_load_26, %tmp_4_17


 <State 22>: 1.46ns
ST_22: StgValue_281 (131)  [1/1] 1.00ns  loc: array_io.c:67
:120  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_18) nounwind

ST_22: tmp_4_26 (198)  [1/1] 1.46ns  loc: array_io.c:67
:187  %tmp_4_26 = add i16 %d_i_load_27, %tmp_4_18


 <State 23>: 1.46ns
ST_23: StgValue_283 (136)  [1/1] 1.00ns  loc: array_io.c:67
:125  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_19) nounwind

ST_23: tmp_4_27 (210)  [1/1] 1.46ns  loc: array_io.c:67
:199  %tmp_4_27 = add i16 %d_i_load_28, %tmp_4_19


 <State 24>: 1.46ns
ST_24: StgValue_285 (141)  [1/1] 1.00ns  loc: array_io.c:67
:130  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_20) nounwind

ST_24: tmp_4_28 (222)  [1/1] 1.46ns  loc: array_io.c:67
:211  %tmp_4_28 = add i16 %d_i_load_29, %tmp_4_20


 <State 25>: 1.46ns
ST_25: StgValue_287 (146)  [1/1] 1.00ns  loc: array_io.c:67
:135  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_21) nounwind

ST_25: tmp_4_29 (234)  [1/1] 1.46ns  loc: array_io.c:67
:223  %tmp_4_29 = add i16 %d_i_load_30, %tmp_4_21


 <State 26>: 1.46ns
ST_26: StgValue_289 (151)  [1/1] 1.00ns  loc: array_io.c:67
:140  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_22) nounwind

ST_26: tmp_4_30 (246)  [1/1] 1.46ns  loc: array_io.c:67
:235  %tmp_4_30 = add i16 %d_i_load_31, %tmp_4_22


 <State 27>: 1.00ns
ST_27: StgValue_291 (163)  [1/1] 1.00ns  loc: array_io.c:67
:152  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_23) nounwind


 <State 28>: 1.00ns
ST_28: StgValue_292 (175)  [1/1] 1.00ns  loc: array_io.c:67
:164  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_24) nounwind


 <State 29>: 1.00ns
ST_29: StgValue_293 (187)  [1/1] 1.00ns  loc: array_io.c:67
:176  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_25) nounwind


 <State 30>: 1.00ns
ST_30: StgValue_294 (199)  [1/1] 1.00ns  loc: array_io.c:67
:188  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_26) nounwind


 <State 31>: 1.00ns
ST_31: StgValue_295 (211)  [1/1] 1.00ns  loc: array_io.c:67
:200  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_27) nounwind


 <State 32>: 1.00ns
ST_32: StgValue_296 (223)  [1/1] 1.00ns  loc: array_io.c:67
:212  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_28) nounwind


 <State 33>: 1.00ns
ST_33: StgValue_297 (235)  [1/1] 1.00ns  loc: array_io.c:67
:224  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_29) nounwind


 <State 34>: 1.00ns
ST_34: StgValue_298 (11)  [1/1] 0.00ns
:0  call void (...)* @_ssdm_op_SpecBitsMap(i16* %d_o) nounwind, !map !7

ST_34: StgValue_299 (12)  [1/1] 0.00ns
:1  call void (...)* @_ssdm_op_SpecBitsMap([32 x i16]* %d_i) nounwind, !map !13

ST_34: StgValue_300 (13)  [1/1] 0.00ns
:2  call void (...)* @_ssdm_op_SpecTopModule([9 x i8]* @array_io_str) nounwind

ST_34: StgValue_301 (14)  [1/1] 0.00ns
:3  call void (...)* @_ssdm_op_SpecInterface(i16* %d_o, [8 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1)

ST_34: StgValue_302 (15)  [1/1] 0.00ns
:4  call void (...)* @_ssdm_op_SpecMemCore([32 x i16]* %d_i, [1 x i8]* @p_str1, [12 x i8]* @p_str2, [1 x i8]* @p_str1, i32 -1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind

ST_34: StgValue_303 (247)  [1/1] 1.00ns  loc: array_io.c:67
:236  call void @_ssdm_op_Write.ap_fifo.volatile.i16P(i16* %d_o, i16 %tmp_4_30) nounwind

ST_34: StgValue_304 (248)  [1/1] 0.00ns  loc: array_io.c:69
:237  ret void



============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 4ns, clock uncertainty: 0.5ns.

 <State 1>: 2.39ns
The critical path consists of the following:
	'getelementptr' operation ('d_i_addr', array_io.c:66) [17]  (0 ns)
	'load' operation ('d_i_load', array_io.c:66) on array 'd_i' [18]  (2.39 ns)

 <State 2>: 2.39ns
The critical path consists of the following:
	'load' operation ('d_i_load', array_io.c:66) on array 'd_i' [18]  (2.39 ns)

 <State 3>: 2.46ns
The critical path consists of the following:
	'load' operation ('acc_0_load', array_io.c:66) on static variable 'acc_0' [16]  (0 ns)
	'add' operation ('tmp_s', array_io.c:67) [21]  (1.46 ns)
	fifo write on port 'd_o' (array_io.c:67) [22]  (1 ns)

 <State 4>: 2.46ns
The critical path consists of the following:
	'load' operation ('acc_1_load', array_io.c:66) on static variable 'acc_1' [23]  (0 ns)
	'add' operation ('tmp_4_1', array_io.c:67) [28]  (1.46 ns)
	fifo write on port 'd_o' (array_io.c:67) [29]  (1 ns)

 <State 5>: 2.46ns
The critical path consists of the following:
	'load' operation ('acc_2_load', array_io.c:66) on static variable 'acc_2' [30]  (0 ns)
	'add' operation ('tmp_4_2', array_io.c:67) [35]  (1.46 ns)
	fifo write on port 'd_o' (array_io.c:67) [36]  (1 ns)

 <State 6>: 2.46ns
The critical path consists of the following:
	'load' operation ('acc_3_load', array_io.c:66) on static variable 'acc_3' [37]  (0 ns)
	'add' operation ('tmp_4_3', array_io.c:67) [42]  (1.46 ns)
	fifo write on port 'd_o' (array_io.c:67) [43]  (1 ns)

 <State 7>: 2.46ns
The critical path consists of the following:
	'load' operation ('acc_4_load', array_io.c:66) on static variable 'acc_4' [44]  (0 ns)
	'add' operation ('tmp_4_4', array_io.c:67) [49]  (1.46 ns)
	fifo write on port 'd_o' (array_io.c:67) [50]  (1 ns)

 <State 8>: 2.46ns
The critical path consists of the following:
	'load' operation ('acc_5_load', array_io.c:66) on static variable 'acc_5' [51]  (0 ns)
	'add' operation ('tmp_4_5', array_io.c:67) [56]  (1.46 ns)
	fifo write on port 'd_o' (array_io.c:67) [57]  (1 ns)

 <State 9>: 2.46ns
The critical path consists of the following:
	'load' operation ('acc_6_load', array_io.c:66) on static variable 'acc_6' [58]  (0 ns)
	'add' operation ('tmp_4_6', array_io.c:67) [63]  (1.46 ns)
	fifo write on port 'd_o' (array_io.c:67) [64]  (1 ns)

 <State 10>: 2.46ns
The critical path consists of the following:
	'load' operation ('acc_7_load', array_io.c:66) on static variable 'acc_7' [65]  (0 ns)
	'add' operation ('tmp_4_7', array_io.c:67) [70]  (1.46 ns)
	fifo write on port 'd_o' (array_io.c:67) [71]  (1 ns)

 <State 11>: 2.46ns
The critical path consists of the following:
	'add' operation ('tmp_4_8', array_io.c:67) [75]  (1.46 ns)
	fifo write on port 'd_o' (array_io.c:67) [76]  (1 ns)

 <State 12>: 2.46ns
The critical path consists of the following:
	'add' operation ('tmp_4_9', array_io.c:67) [80]  (1.46 ns)
	fifo write on port 'd_o' (array_io.c:67) [81]  (1 ns)

 <State 13>: 2.46ns
The critical path consists of the following:
	'add' operation ('tmp_4_s', array_io.c:67) [85]  (1.46 ns)
	fifo write on port 'd_o' (array_io.c:67) [86]  (1 ns)

 <State 14>: 2.46ns
The critical path consists of the following:
	'add' operation ('tmp_4_10', array_io.c:67) [90]  (1.46 ns)
	fifo write on port 'd_o' (array_io.c:67) [91]  (1 ns)

 <State 15>: 2.98ns
The critical path consists of the following:
	'add' operation ('tmp3', array_io.c:66) [156]  (1.46 ns)
	'add' operation ('tmp2', array_io.c:66) [158]  (1.52 ns)

 <State 16>: 2.98ns
The critical path consists of the following:
	'add' operation ('tmp9', array_io.c:66) [180]  (1.46 ns)
	'add' operation ('tmp8', array_io.c:66) [182]  (1.52 ns)

 <State 17>: 2.98ns
The critical path consists of the following:
	'add' operation ('tmp15', array_io.c:66) [204]  (1.46 ns)
	'add' operation ('tmp14', array_io.c:66) [206]  (1.52 ns)

 <State 18>: 2.98ns
The critical path consists of the following:
	'add' operation ('tmp21', array_io.c:66) [228]  (1.46 ns)
	'add' operation ('tmp20', array_io.c:66) [230]  (1.52 ns)

 <State 19>: 2.88ns
The critical path consists of the following:
	'add' operation ('tmp19', array_io.c:66) [227]  (1.44 ns)
	'add' operation ('tmp_3_6', array_io.c:66) [232]  (1.44 ns)

 <State 20>: 1.46ns
The critical path consists of the following:
	'add' operation ('tmp_4_24', array_io.c:67) [174]  (1.46 ns)

 <State 21>: 1.46ns
The critical path consists of the following:
	'add' operation ('tmp_4_25', array_io.c:67) [186]  (1.46 ns)

 <State 22>: 1.46ns
The critical path consists of the following:
	'add' operation ('tmp_4_26', array_io.c:67) [198]  (1.46 ns)

 <State 23>: 1.46ns
The critical path consists of the following:
	'add' operation ('tmp_4_27', array_io.c:67) [210]  (1.46 ns)

 <State 24>: 1.46ns
The critical path consists of the following:
	'add' operation ('tmp_4_28', array_io.c:67) [222]  (1.46 ns)

 <State 25>: 1.46ns
The critical path consists of the following:
	'add' operation ('tmp_4_29', array_io.c:67) [234]  (1.46 ns)

 <State 26>: 1.46ns
The critical path consists of the following:
	'add' operation ('tmp_4_30', array_io.c:67) [246]  (1.46 ns)

 <State 27>: 1ns
The critical path consists of the following:
	fifo write on port 'd_o' (array_io.c:67) [163]  (1 ns)

 <State 28>: 1ns
The critical path consists of the following:
	fifo write on port 'd_o' (array_io.c:67) [175]  (1 ns)

 <State 29>: 1ns
The critical path consists of the following:
	fifo write on port 'd_o' (array_io.c:67) [187]  (1 ns)

 <State 30>: 1ns
The critical path consists of the following:
	fifo write on port 'd_o' (array_io.c:67) [199]  (1 ns)

 <State 31>: 1ns
The critical path consists of the following:
	fifo write on port 'd_o' (array_io.c:67) [211]  (1 ns)

 <State 32>: 1ns
The critical path consists of the following:
	fifo write on port 'd_o' (array_io.c:67) [223]  (1 ns)

 <State 33>: 1ns
The critical path consists of the following:
	fifo write on port 'd_o' (array_io.c:67) [235]  (1 ns)

 <State 34>: 1ns
The critical path consists of the following:
	fifo write on port 'd_o' (array_io.c:67) [247]  (1 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
